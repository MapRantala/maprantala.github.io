<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>env.js on Node Dangles</title>
    <link>https://maprantala.com/tags/env.js/</link>
    <description>Recent content in env.js on Node Dangles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Apr 2017 20:08:37 -0500</lastBuildDate>
    <atom:link href="https://maprantala.com/tags/env.js/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Esri Web AppBuilder 2.4 Empty Basemap Gallery</title>
      <link>https://maprantala.com/2017/04/10/esri-web-appbuilder-2.4-empty-basemap-gallery/</link>
      <pubDate>Mon, 10 Apr 2017 20:08:37 -0500</pubDate>
      <guid>https://maprantala.com/2017/04/10/esri-web-appbuilder-2.4-empty-basemap-gallery/</guid>
      <description>&lt;p&gt;I recently downloaded Web AppBuilder 2.4, Developer&amp;rsquo;s Edition and built a quick &amp;amp; dirty app. For some reason, it worked fine in Web AppBuilder but once I deployed it, no basemaps would show in the B&lt;a href=&#34;http://doc.arcgis.com/en/web-appbuilder/create-apps/widget-basemap.htm&#34;&gt;aseman Gallery widget&lt;/a&gt;, it would just spin, spin, spin.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://i2.wp.com/maprantala.com/wp-content/uploads/2017/04/BasemapGallery.png&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Digging around, I found some &lt;a href=&#34;https://geonet.esri.com/thread/118906&#34;&gt;old posts&lt;/a&gt; where users were experiencing similar problems but none of the solution resulted in a great solution. I was able to get it to work by listing the basemaps individually in the config_BasemapGallery.json file but I that was more of a work-around. Notice in the thumbnailUrl, I have to put the full path to the thumbnails. Note that for brevity&amp;rsquo;s sake, I&amp;rsquo;m only showing one of the basemaps in this sample.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;basemapGallery&amp;quot;: {
    &amp;quot;showArcGISBasemaps&amp;quot;: true,
    &amp;quot;basemaps&amp;quot;: [{
      &amp;quot;layers&amp;quot;: [{&amp;quot;url&amp;quot;: &amp;quot;http://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer&amp;quot;}],
      &amp;quot;title&amp;quot;: &amp;quot;Imagery&amp;quot;,
      &amp;quot;thumbnailUrl&amp;quot;: &amp;quot;http://&amp;amp;lt;org&amp;amp;gt;.maps.arcgis.com/sharing/rest/content/items/&amp;amp;lt;id&amp;amp;gt;/info/thumbnail/tempimagery.jpg&amp;quot;,
      &amp;quot;spatialReference&amp;quot;: {
         &amp;quot;wkid&amp;quot;: &amp;quot;102100&amp;quot;
      }
     }]
   }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Eventually, I started comparing the requests generated by the version in the development version and the one in production and tracked the problem down to this POST request in production, which was returning a 400 Bad Request error:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://&amp;amp;lt;server&amp;amp;gt;/proxy/proxy.ashx?https://&amp;amp;lt;org&amp;amp;gt;.maps.arcgis.com/sharing/rest/search&amp;amp;wab_dv=2.4

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To this one in dev:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://&amp;amp;lt;org&amp;amp;gt;.maps.arcgis.com/sharing/rest/search
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I stripped off the &amp;lsquo;&amp;amp;wab_dv=2.4&amp;rsquo; parameter from the production request and Boom! it worked. So I now knew what was causing the problem. Just had to figure out why it was occurring. I had actually already seen part of the answer while digging around in &lt;strong&gt;env.js&lt;/strong&gt; while looking for a way to test my changes without having to clear my cache or remember to use an Incognito session. On line 81 of &lt;strong&gt;env.js&lt;/strong&gt;, there is this variable, &lt;strong&gt;deployVersion&lt;/strong&gt; which is set to 2.4.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://i2.wp.com/maprantala.com/wp-content/uploads/2017/04/deployVersion.png&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;br&gt;
I had recently worked on a solution that involved appending a time stamp onto scripts we were loading so I was familiar with what is going on–the code was appending a version onto the call so that if you change the &lt;strong&gt;deployVersion&lt;/strong&gt;, the browser would load a new version of the code. The &lt;strong&gt;appendDeployVersion&lt;/strong&gt; function on line 307 of &lt;strong&gt;env.js&lt;/strong&gt; was doing the append. Notice the &lt;strong&gt;if&lt;/strong&gt; statement on line 312, it checks for &amp;lsquo;?&amp;rsquo; in the url. If it finds one, it appends &amp;lsquo;**&amp;amp;&lt;strong&gt;wab_dv=&amp;rsquo; and the version, otherwise it appends &amp;lsquo;&lt;/strong&gt;?**wab_dv=&amp;rsquo; and the version–the difference being the &amp;lsquo;&amp;amp;&amp;rsquo; vs &amp;lsquo;?&amp;rsquo;. A question mark is used before the first parameter in an URL, each additional parameter is separated by a ampersand (&amp;amp;) so that logic makes sense.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://i2.wp.com/maprantala.com/wp-content/uploads/2017/04/IfStatement.png&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;However, the monkey wrench is that I&amp;rsquo;m using a proxy, so my URL has a question mark related to the proxy:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://&amp;amp;lt;server&amp;amp;gt;/proxy/proxy.ashx&amp;lt;strong&amp;gt;?&amp;lt;/strong&amp;gt;https://&amp;amp;lt;org&amp;amp;gt;.maps.arcgis.com/sharing/rest/search&amp;amp;wab_dv=2.4

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So the code was dutifully appending an ampersand and the version parameter &amp;lsquo;&amp;amp;wab_dv=2.4&amp;rsquo; to my URL so the proxy would be requesting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://&amp;amp;lt;org&amp;amp;gt;.maps.arcgis.com/sharing/rest/search&amp;amp;wab_dv=2.4

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;when it should have been requesting:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://&amp;amp;lt;org&amp;amp;gt;.maps.arcgis.com/sharing/rest/search?wab_dv=2.4

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once I had determined the problem (99% of the battle), I was able to quickly put in a patch that works for my instance. This patch isn&amp;rsquo;t a great one that Esri should use but it solves it in my case. I just added logic so that it would ignore proxy-related question marks:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://i0.wp.com/maprantala.com/wp-content/uploads/2017/04/solution.png&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;function appendDeployVersion(url){
    if(/^http(s)?:\/\//.test(url) || /^\/proxy\.js/.test(url) || /^\/\//.test(url)){
      return url;
    }

	var proxyURL = url.toLowerCase().replace(&amp;quot;.ashx?&amp;quot;,&amp;quot;&amp;quot;);
    if(proxyURL.indexOf(&#39;?&#39;) &amp;amp;gt; -1){
      url = url + &#39;&amp;amp;wab_dv=&#39; + deployVersion;
    }else{
      url = url + &#39;?wab_dv=&#39; + deployVersion;
    }
    return url;
  }

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And voila! my Web AppBuilder now had all the basemaps options a mapineer could hope for:&lt;br&gt;
&lt;a href=&#34;https://i0.wp.com/maprantala.com/wp-content/uploads/2017/04/BaemapsAplenty.png&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
