<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Node Dangles</title>
    <link>https://maprantala.com/tags/python/</link>
    <description>Recent content in python on Node Dangles</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 May 2018 17:56:09 -0500</lastBuildDate>
    <atom:link href="https://maprantala.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using ArcPy.Mapping to update Definition Queries</title>
      <link>https://maprantala.com/2018/05/08/using-arcpy.mapping-to-update-definition-queries/</link>
      <pubDate>Tue, 08 May 2018 17:56:09 -0500</pubDate>
      <guid>https://maprantala.com/2018/05/08/using-arcpy.mapping-to-update-definition-queries/</guid>
      <description>&lt;p&gt;Working with a routine process today that I normally only do once in awhile but today needed to do it several times. It requires changing the definition query on several features classes. Being the &amp;lsquo;lazy&amp;rsquo; GIS guy that I am (owner of a company I used to work at called me that once as a sort of compliment for my tendency to script a lot of what I did), I decided to finally script it instead of changing definition queries about 42 times.&lt;/p&gt;
&lt;p&gt;The quick &amp;amp; dirty &lt;del&gt;script&lt;/del&gt; code that I wrote &amp;amp; can be run in the ArcMap python window consists of two parts. The first three lines just need to be run once per session to get a variable set with the list of layers. The loop I ran multiple times, updating the &amp;lsquo;.replace&amp;rsquo; settings each time. I ran the loop, did my other processes, and re-ran the loop as needed and was a happy GISer.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#These first 3 lines only need to be run once.
mxd = arcpy.mapping.MapDocument(&amp;quot;CURRENT&amp;quot;)
l = arcpy.mapping.ListDataFrames(mxd)[0] #Note the hard-code [0], meaning the first dataframe. YMMV
ll = arcpy.mapping.ListLayers(l)

#Everytime I wanted to update the definition queries just need to update the replace parameters.

for l in ll:
     try:
        print(l.name)
        print(l.definitionQuery)
        z = l.definitionQuery.replace(&amp;quot;_011&amp;quot;,&amp;quot;_012&amp;quot;)
        l.definitionQuery = z
     except:
        print(&amp;quot;&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>ArcToolbox Tool: Add [ST_CON_ABR] to Hennepin County, MN Centerlines</title>
      <link>https://maprantala.com/2017/10/04/arctoolbox-tool-add-st_con_abr-to-hennepin-county-mn-centerlines/</link>
      <pubDate>Wed, 04 Oct 2017 22:17:11 -0500</pubDate>
      <guid>https://maprantala.com/2017/10/04/arctoolbox-tool-add-st_con_abr-to-hennepin-county-mn-centerlines/</guid>
      <description>&lt;p&gt;One of the great advancements over the last decade plus in GIS is that government agencies have started to move away from a &amp;lsquo;recover-our-cost&amp;rsquo; mentality to more of an &amp;lsquo;Open Data&amp;rsquo;. Minnesota, for example, has launched their &lt;a href=&#34;https://gisdata.mn.gov/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Geospatial Commons&lt;/a&gt; as a platform for sharing data.&lt;/p&gt;
&lt;p&gt;And while getting free, authoritative data is awesome, it can leave you in a bind if the structure of the data changes. Sometime between April and September, Hennepin County, Minnesota, changed the schema of their &lt;a href=&#34;http://www.hennepin.us/gisopendata&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;publicly available street centerlines data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The data used to have both a full, concatenated street name field ([ST_CONCAT]) and an abbreviated version ([ST_CON_ABR]). A record might have &amp;lsquo;James Lofton Avenue North&amp;rsquo; and &amp;lsquo;James Lofton Ave N&amp;rsquo;, respectively, in these two fields. The abbreviated version was nice for labeling but it disappeared from the most recent updates.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2017/10/Streetnames.jpg&#34; alt=&#34;Options&#34;&gt;&lt;/p&gt;
&lt;p&gt;So, as you  might guess from the fact that I&amp;rsquo;m posting about it, I wrote a script to add that field in and launch it from an ArcToolbox Tool. Nothing fancy going on in the code, just a series of replaces, depending on the field. Using dictionaries instead of arrays of paired values might have been better but the script takes just a few seconds to run so I can live with it as-is.&lt;/p&gt;
&lt;p&gt;The list of street type abbreviations came from a combination of &lt;a href=&#34;http://support.esri.com/en/technical-article/000008454&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ESRI&amp;rsquo;s standards&lt;/a&gt; and those found in an older version of the Hennepin County data. There were no conflicting abbreviations between the two. The code warns if a street name occurs in the data that is not in the list.&lt;/p&gt;
&lt;p&gt;While I&amp;rsquo;m including the code here for reference, it&amp;rsquo;s probably best to &lt;a href=&#34;https://github.com/MapRantala/Blog/tree/master/ArcToolbox/20171004_Add_STCONABR&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;download the code from GitHub.&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Name:        usi_dataprep_Add_STCONABR&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Purpose:     This can be used to add [CT_CON_ABR] to Hennepin County, MN&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#              centerlines. This is a concatenated, abbreviated full name of&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#              the street. This used to be included in the data but&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#              disappeared from the downloads in the summer of 2017.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#              Data available at: http://www.hennepin.us/gisopendata&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Author:      mrantala&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Created:     2017.10.04&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#------------------------------------------------------------------------------&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; arcpy

&lt;span style=&#34;color:#75715e&#34;&gt;############################################&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## Custom Variables&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#These are the fields that are concatenated. Hennepin has others but were always blank.&lt;/span&gt;
requiredFieldList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_PRE_DIR&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_PRE_TYP&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_NAME&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_POS_TYP&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_POS_DIR&amp;#34;&lt;/span&gt;]
&lt;span style=&#34;color:#75715e&#34;&gt;#This is the name of the field to add&lt;/span&gt;
newFieldName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_CON_ABR&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#These are the abbreviations for [ST_POS_TYPE]. The list was created using a sample of&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin&amp;#39;s centerline data &amp;amp; Esri Tech article: http://support.esri.com/en/technical-article/000008454&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Note that I intentionally left cases in where there is no abbreviation (Fall, for example) as a means of&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#documenting the fact that it should NOT change.&lt;/span&gt;

abbList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Alcove&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Alcove&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Alley&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Aly&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Annex&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Anx&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Arcade&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Arc&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Avenue&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ave&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bay&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bay&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bayoo&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Byu&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Beach&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bch&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bend&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bnd&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bluff&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blf&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bluffs&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blfs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bottom&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Btm&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Boulevard&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blvd&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Branch&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Br&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bridge&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Brg&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Brook&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Brk&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Brooks&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Brks&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Burg&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bg&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Burgs&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bgs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bypass&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Byp&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Camp&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cp&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Canyon&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cyn&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cape&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cpe&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Causeway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cswy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Center&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ctr&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Centers&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ctrs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Crossings&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Crossings&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Crossroad&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Xrd&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Chase&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Chase&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Circle&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cir&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Circles&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cirs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cliff&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clf&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cliffs&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clfs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Club&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Clb&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Close&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Close&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Common&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cmn&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Commons&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cmns&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Corner&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cor&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Corners&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cors&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Corridor&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Corridor&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Course&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Crse&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Court&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ct&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Courts&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cts&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cove&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cv&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Coves&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cvs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Creek&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Crk&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Crescent&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cres&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Crest&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Crst&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cross&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cross&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Crossing&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Xing&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Curve&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Curve&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dale&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dam&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dm&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Divide&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dv&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Down&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Down&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Downs&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Downs&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Drive&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Dr&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Drives&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Drs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Edge&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Edge&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Entry&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Entry&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Estate&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Est&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Estates&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ests&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Expressway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Expy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Extension&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ext&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Extensions&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Exts&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fall&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fall&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Falls&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fls&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ferry&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fry&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Field&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fld&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fields&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Flds&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Flat&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Flt&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Flats&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Flts&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ford&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Frd&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fords&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Frds&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Forest&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Frst&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Forge&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Frg&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Forges&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Frgs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fork&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Frk&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Forks&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Frks&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fort&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ft&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Freeway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fwy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gables&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gables&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Garden&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gdn&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gardens&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gdns&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gate&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gate&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gateway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gtwy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Glade&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Glade&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Glen&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Gln&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Glens&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Glns&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Green&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Grn&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Greens&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Grns&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Greenway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Greenway&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Grove&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Grv&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Groves&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Grvs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Harbor&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hbr&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Harbors&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hbrs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Haven&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hvn&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Heights&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hts&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Highway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hwy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hill&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hills&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hls&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hollow&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Holw&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Horn&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Horn&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Inlet&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Inlt&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Island&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Is&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Islands&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Iss&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Isle&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Isle&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Junction&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Jct&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Junctions&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Jcts&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Key&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ky&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Keys&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Kys&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Knoll&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Knl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Knolls&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Knls&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lake&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lk&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lakes&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lks&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Land&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Land&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Landing&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lndg&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lane&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ln&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Light&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lgt&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lights&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lgts&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Loaf&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lf&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lock&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lck&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Locks&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lcks&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Lodge&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ldg&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Loop&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Loop&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mall&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mall&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Manor&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mnr&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Manors&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mnrs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Meadow&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mdw&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Meadows&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mdws&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mews&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mews&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mill&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ml&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mills&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mls&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mission&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Msn&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Motorway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mtwy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mount&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mt&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mountain&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mtn&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mountains&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mtns&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Neck&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Nck&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Orchard&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Orch&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Oval&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Oval&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Overpass&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Opas&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Park&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Park&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Parks&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Park&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Parkway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pkwy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Parkways&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pkwy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pass&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pass&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Passage&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Psge&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Path&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Path&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pike&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pike&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pine&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pne&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pines&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pnes&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Place&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Plain&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pln&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Plains&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Plns&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Plaza&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Plz&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Point&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pt&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Points&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pts&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Port&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Prt&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ports&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Prts&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Prairie&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pr&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Radial&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Radl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Railroad&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Railroad&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ramp&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ramp&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ranch&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rnch&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rapid&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rpd&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rapids&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rpds&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rest&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rst&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ridge&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rdg&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ridges&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rdgs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rise&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rise&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;River&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Riv&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Road&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rd&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Roads&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rds&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Route&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rte&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Row&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Row&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rue&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Rue&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Run&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Run&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shoal&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shoals&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shls&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shore&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shr&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shores&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Shrs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Skies&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Skies&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Skyway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Skwy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spring&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spg&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Springs&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spgs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spur&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spur&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spurs&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Spur&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Square&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sq&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Squares&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sqrs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Station&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sta&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Stravenue&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Stra&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Stream&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Strm&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Street&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;St&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Streets&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sts&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Summit&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Smt&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Terrace&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ter&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Throughway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trwy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trace&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trce&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Track&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trak&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trafficway&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trfy&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trail&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Trl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tunnel&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tunl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Turn&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Turn&amp;#34;&lt;/span&gt;]) &lt;span style=&#34;color:#75715e&#34;&gt;#Hennepin Specific&lt;/span&gt;
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Turnpike&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tpke&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Underpass&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Upas&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Union&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Un&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Unions&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Uns&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Valley&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vly&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Valleys&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vlys&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Viaduct&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Via&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;View&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vw&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Views&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vws&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Village&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vlg&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Villages&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vlgs&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ville&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vista&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Vis&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Walk&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Walk&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Walks&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Walk&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Wall&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Wall&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Way&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Way&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ways&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Ways&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Well&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Wl&amp;#34;&lt;/span&gt;])
abbList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Wells&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Wls&amp;#34;&lt;/span&gt;])

&lt;span style=&#34;color:#75715e&#34;&gt;#List of changes for [St_POS_Dir]&lt;/span&gt;
posDirList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;North&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;N&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;East&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;E&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;South&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;West&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;W&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Northeast&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NE&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Northwest&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NW&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Southeast&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SE&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Southwest&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SW&amp;#34;&lt;/span&gt;]]
preDirList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;North&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;N&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;East&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;E&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;South&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S&amp;#34;&lt;/span&gt;],[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;West&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;W&amp;#34;&lt;/span&gt;]]
&lt;span style=&#34;color:#75715e&#34;&gt;############################################&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;## Read Arguments&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (len(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
    inFC &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]

&lt;span style=&#34;color:#75715e&#34;&gt;############################################&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# General Purpose Functions&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printit&lt;/span&gt;(inputString):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(inputString)
        arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AddMessage(str(inputString))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;pass&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printerror&lt;/span&gt;(inputString):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (inputString)
    arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AddError(inputString)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getField&lt;/span&gt;(inFeatureClass, inFieldName):
  fieldList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListFields(inFeatureClass)
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; iField &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; fieldList:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; iField&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; inFieldName&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower():
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; iField
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; None

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fieldExists&lt;/span&gt;(inFeatureClass, inFieldName):
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; getField(inFeatureClass,inFieldName) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&amp;gt;&lt;/span&gt; None

&lt;span style=&#34;color:#75715e&#34;&gt;############################################&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Initial QC&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initialQC&lt;/span&gt;():
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Exists(inFC)):
        printit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PASS: Feature Class {} Exists&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(inFC))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        printerror(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: Feature Class {} Does Not Exist, Cancelling...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(inFC))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False

    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; iFld &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; requiredFieldList:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (fieldExists(inFC,iFld)):
            printit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PASS: Feature Class {} Has Field [{}]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(inFC,iFld))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            printerror(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: Feature Class {} Does Not Have Field [{}], Cancelling...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(inFC,iFld))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False

    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; (fieldExists(inFC,newFieldName)):
        printit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GOOD: Feature Class {} Does Not Already Have Field [{}]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(inFC,newFieldName))
        printit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; ADDING Field [{}]&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(newFieldName))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AddField_management(in_table&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;inFC, field_name&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;newFieldName, field_type&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;TEXT&amp;#34;&lt;/span&gt;, field_precision&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, field_scale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, field_length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;100&amp;#34;&lt;/span&gt;, field_alias&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, field_is_nullable&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NULLABLE&amp;#34;&lt;/span&gt;, field_is_required&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NON_REQUIRED&amp;#34;&lt;/span&gt;, field_domain&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
            printerror(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: Error While Adding Field [{}], Cancelling...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(newFieldName))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; (fieldExists(inFC,newFieldName)):
            printerror(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: Unable to Add Field [{}], Cancelling...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(newFieldName))
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        printerror(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: Feature Class {} Already Has Field [{}], Cancelling...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(inFC,newFieldName))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False

    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True

&lt;span style=&#34;color:#75715e&#34;&gt;############################################&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Main&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;makeSubstitution&lt;/span&gt;(inList,inValue,inFieldName):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; iAbbreviationPr &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; inList:
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (inValue &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; iAbbreviationPr[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]): &lt;span style=&#34;color:#75715e&#34;&gt;#Found a Match&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; iAbbreviationPr[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
    printit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;WARNING: [{}] of {} does not have a value in the abbreviation list! Potential Error...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(inFieldName,inValue))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; inValue

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;():
    cursorFieldList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; requiredFieldList
    cursorFieldList&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(newFieldName)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
        iUCursor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;da&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;UpdateCursor(inFC,cursorFieldList)
        iRowCount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
        iRowMax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; uRow &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; iUCursor:

            &lt;span style=&#34;color:#75715e&#34;&gt;#Just to give user an indicator that progress is being made&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (iRowCount &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; iRowMax):
                printit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; {}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(iRowCount))
                iRowMax &lt;span style=&#34;color:#f92672&#34;&gt;*=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
                iRowCount&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

            abbreviateConcatenatedName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
            iFldIndex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; iFld &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; requiredFieldList:


                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (iFld &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; newFieldName):
                    uRow[iFldIndex] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; abbreviateConcatenatedName
                    iUCursor&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;updateRow(uRow)
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                    iValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; uRow[iFldIndex]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;strip() &lt;span style=&#34;color:#75715e&#34;&gt;#Strip is just a safe-guard&lt;/span&gt;


                    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ((iValue &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; (iValue &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; None)):
                        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (iFld &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_PRE_DIR&amp;#34;&lt;/span&gt;):
                            iValue&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; makeSubstitution(preDirList,iValue,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_PRE_DIR&amp;#34;&lt;/span&gt;)
                        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (iFld &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_POS_TYP&amp;#34;&lt;/span&gt;):
                            iValue&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; makeSubstitution(abbList,iValue,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_POS_TYPE&amp;#34;&lt;/span&gt;)
                        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (iFld &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_POS_DIR&amp;#34;&lt;/span&gt;):
                            iValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; makeSubstitution(posDirList,iValue,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ST_POS_DIR&amp;#34;&lt;/span&gt;)

                        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (abbreviateConcatenatedName &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;):
                            abbreviateConcatenatedName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iValue
                        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
                            abbreviateConcatenatedName&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;iValue
                iFldIndex &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

        &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; iUCursor
    &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;RuntimeError&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; e:
        printerror(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ERROR: Error {} Occurred, Cancelling...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(e))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; iUCursor
            &lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; uRow
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True


&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (initialQC() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; True):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (main() &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; True):
            printit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Done!&amp;#34;&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Converting MXD to Layer file in Arcpy</title>
      <link>https://maprantala.com/2015/08/14/converting-mxd-to-layer-file-in-arcpy/</link>
      <pubDate>Fri, 14 Aug 2015 10:01:54 -0500</pubDate>
      <guid>https://maprantala.com/2015/08/14/converting-mxd-to-layer-file-in-arcpy/</guid>
      <description>&lt;p&gt;Working on doing some &lt;a href=&#34;http://resources.arcgis.com/EN/HELP/MAIN/10.1/index.html#//01540000056t000000&#34; target=&#34;_blank&#34;&gt;advanced ArcGIS server printing&lt;/a&gt; and had the need to batch convert many existing .mxd files to .lyr files. So instead of opening up X number of map documents, thought I would do it via code. All of my .mxds in this case had just one data frame so the process was pretty simple–I add an empty group layer (Thanks &lt;a href=&#34;http://gis.stackexchange.com/users/434/petr-krebs&#34; target=&#34;_blank&#34;&gt;Petr Krebs&lt;/a&gt; for the idea), copy all the existing layers into it, and save it out as a layer file.&lt;/p&gt;
&lt;p&gt;I created an ArcGIS toolbox with two options–one to convert a single .mxd and one to batch convert an entire folder. To use it, make sure to have the EmptyGroup.lyr in the same directory as the .py file.&lt;/p&gt;
&lt;p&gt;Here is the raw code or &lt;a href=&#34;https://github.com/MapRantala/Blog/tree/master/ArcToolbox/ArcGIS/20150814_ConvertMxd2Lyr&#34; target=&#34;_blank&#34;&gt;git it&lt;/a&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import os
import arcpy
import inspect
import glob
import uuid
import inspect

codeDir = os.path.dirname(inspect.getfile(inspect.currentframe()))
EmptyGroupLayerFile = codeDir+&amp;quot;/EmptyGroup.lyr&amp;quot;
inArg1 = sys.argv[1]
inArg2 = sys.argv[2]

def printit(inMessage):
    arcpy.AddMessage(inMessage)

def makeLyrFromMXD(inMXD, outLyr):
    if not (os.path.exists(inMXD)):
        printit( &amp;quot;ERROR: {} does not exist&amp;quot;.format(inMXD))
        return False
    if not (os.path.exists(EmptyGroupLayerFile)):
        printit( &amp;quot;ERROR: {} does not exist&amp;quot;.format(EmptyGroupLayerFile))
        return False
    if  (os.path.exists(outLyr)):
        printit( &amp;quot;Skipping: {} already exists&amp;quot;.format(outLyr))
        return True

    printit( &amp;quot;Making Layer file: {0}&amp;quot;.format(outLyr))

    mxd = arcpy.mapping.MapDocument(inMXD)
    ###Right now, just doing the first Dataframe, this could be modified
    df = arcpy.mapping.ListDataFrames(mxd)[0]

    theUUID = str(uuid.uuid1())

    iGroupLayerRaw = arcpy.mapping.Layer(EmptyGroupLayerFile)
    iGroupLayerRaw.name = theUUID
    arcpy.mapping.AddLayer(df,iGroupLayerRaw,&amp;quot;TOP&amp;quot;)
    groupBaseName = os.path.basename(outLyr).split(&amp;quot;.&amp;quot;)[0]

    for lyr in arcpy.mapping.ListLayers(df):
        if not (lyr.name == theUUID):
            if (lyr.longName == lyr.name):
                arcpy.mapping.AddLayerToGroup (df, iGroupLayer, lyr, &amp;quot;Bottom&amp;quot;)
        else:
            iGroupLayer = lyr

    iGroupLayer.name = groupBaseName
    arcpy.SaveToLayerFile_management(iGroupLayer, outLyr)
    return os.path.exists(outLyr)

def doMultiple(inDir,outDir):
    for iMxd in glob.glob(inDir+&amp;quot;/*.mxd&amp;quot;):
        lyrFile = outDir+&amp;quot;/&amp;quot;+os.path.basename(iMxd).lower().replace(&amp;quot;.mxd&amp;quot;,&amp;quot;.lyr&amp;quot;)
        makeLyrFromMXD(iMxd, lyrFile)

if(not os.path.exists(EmptyGroupLayerFile)):
    printit(&amp;quot;Error: {} is missing, can not run.&amp;quot;.format(EmptyGroupLayerFile))
else:
    if (os.path.isdir(inArg1) and (os.path.isdir(inArg2))):
        doMultiple(inArg1,inArg2)
    elif (os.path.isfile(inArg1)):
        if (os.path.exists(inArg2)):
            printit(&amp;quot;Error: {} already exists&amp;quot;.format(inArg2))
        else:
            makeLyrFromMXD(inArg1,inArg2)
    else:
        printit(&amp;quot;Unable to understand input parameters&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Calling os.startfile and webbrowser.open from ArcGIS</title>
      <link>https://maprantala.com/2014/12/31/calling-os.startfile-and-webbrowser.open-from-arcgis/</link>
      <pubDate>Wed, 31 Dec 2014 14:38:16 -0600</pubDate>
      <guid>https://maprantala.com/2014/12/31/calling-os.startfile-and-webbrowser.open-from-arcgis/</guid>
      <description>&lt;p&gt;Recently I&amp;rsquo;ve created &lt;a href=&#34;http://resources.arcgis.com/en/help/main/10.2/index.html#//014p00000025000000&#34; target=&#34;_blank&#34;&gt;Python add-ins&lt;/a&gt; for data entry for our staff. Most of these have a toolbar with a &amp;lsquo;Help&amp;rsquo; button that opens a help file in .pdf format.&lt;figure id=&#34;attachment_4515&#34; aria-describedby=&#34;caption-attachment-4515&#34; style=&#34;width: 339px&#34; class=&#34;wp-caption alignnone&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2014/12/Toolbar.png&#34; alt=&#34;Sample python add-in toolbar.&#34;&gt;&lt;/p&gt;
&lt;figcaption id=&#34;caption-attachment-4515&#34; class=&#34;wp-caption-text&#34;&gt;Sample python add-in toolbar.&lt;/figcaption&gt;&lt;/figure&gt; 
&lt;p&gt;The first add-in was for ArcCatalog and this worked splendidly. I was using os.startfile(&lt;em&gt;path to help.pdf&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;However, when I started doing ArcMap add-ins, clicking the Help button would open the help.pdf but ArcMap would crash. Oops!&lt;/p&gt;
&lt;p&gt;Luckily the &lt;a href=&#34;https://twitter.com/arcpy&#34; target=&#34;_blank&#34;&gt;Python development team at Esri&lt;/a&gt; already had a &lt;a href=&#34;https://arcpy.wordpress.com/2013/10/25/using-os-startfile-and-webbrowser-open-in-arcgis-for-desktop/&#34; target=&#34;_blank&#34;&gt;blog post&lt;/a&gt; about this at their &lt;a href=&#34;https://arcpy.wordpress.com/&#34; target=&#34;_blank&#34;&gt;ArcPy Café blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;They report that the root of the problem is &amp;lsquo;conflicts in the way the Windows libraries expect to be called, they can fail or crash when called within ArcGIS for Desktop in an add-in script or geoprocessing script tool&amp;rsquo;. But this can be overcome by using a &lt;a href=&#34;http://en.wikipedia.org/wiki/Decorator_pattern&#34; target=&#34;_blank&#34;&gt;decorator&lt;/a&gt; function that calls os.startfile from a new thread. Another function effected by these conflicts is webbrowser.open.&lt;/p&gt;
&lt;p&gt;Example code is shown below:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; functools
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; threading
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; webbrowser
 
&lt;span style=&#34;color:#75715e&#34;&gt;# A decorator that will run its wrapped function in a new thread&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;run_in_other_thread&lt;/span&gt;(function):
    &lt;span style=&#34;color:#75715e&#34;&gt;# functool.wraps will copy over the docstring and some other metadata&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# from the original function&lt;/span&gt;
    &lt;span style=&#34;color:#a6e22e&#34;&gt;@functools.wraps&lt;/span&gt;(function)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fn_&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;args, &lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;kwargs):
        thread &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; threading&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Thread(target&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;function, args&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;args, kwargs&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;kwargs)
        thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;start()
        thread&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join()
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fn_
 
&lt;span style=&#34;color:#75715e&#34;&gt;# Our new wrapped versions of os.startfile and webbrowser.open&lt;/span&gt;
startfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; run_in_other_thread(os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;startfile)
openbrowser &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; run_in_other_thread(webbrowser&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Then whenever you call startfile or openbrowser, it will be routed through your decorator function and, as far as I&amp;rsquo;ve been able to tell, works fine without crashing your ArcMap session.&lt;/p&gt;
&lt;p&gt;Cheers!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Quick &amp; Dirty ArcPy: Listing Data Sources</title>
      <link>https://maprantala.com/2014/12/03/quick-dirty-arcpy-listing-data-sources/</link>
      <pubDate>Wed, 03 Dec 2014 08:05:10 -0600</pubDate>
      <guid>https://maprantala.com/2014/12/03/quick-dirty-arcpy-listing-data-sources/</guid>
      <description>&lt;p&gt;I just had the need to go through a directory containing many (100+) layer files (.lyr) and verify the data sources in each. I could have loaded each into ArcMap and checked the properties, but choose not to. Here&amp;rsquo;s the &lt;a href=&#34;https://github.com/MapRantala/Blog/blob/master/python/arcpy/20141203_ListDataSources/listDataSources.py&#34;&gt;bare-bones script&lt;/a&gt; I used instead:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; glob&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt;os

theDir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;L:\gdrs\data\org\us_mn_state_dnr\elev_minnesota_lidar&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chdir(theDir)

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; iFile &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; glob&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glob(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*.lyr&amp;#34;&lt;/span&gt;):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; iFile
    lyr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mapping&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Layer(iFile)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mapping&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListLayers(lyr):
        &lt;span style=&#34;color:#66d9ef&#34;&gt;try&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    {0}: {1}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i,i&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dataSource)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;except&lt;/span&gt;:
            &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;    {0}: Does not support dataSource&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;format(i)

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Done!&amp;#34;&lt;/span&gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Garmin GPX to Shapefile (SHP) conversion GPX2Shp.py</title>
      <link>https://maprantala.com/2014/05/16/garmin-gpx-to-shapefile-shp-conversion-gpx2shp.py/</link>
      <pubDate>Fri, 16 May 2014 21:11:20 -0500</pubDate>
      <guid>https://maprantala.com/2014/05/16/garmin-gpx-to-shapefile-shp-conversion-gpx2shp.py/</guid>
      <description>&lt;p&gt;I mentioned using &lt;a href=&#34;https://tapiriik.com&#34; target=&#34;_blank&#34;&gt;Tapiriik&lt;/a&gt; to batch download my entire Garmin Connect history–over 1,000 separate .GPX files. I found several tools to convert .&lt;a href=&#34;http://arcscripts.esri.com/details.asp?dbid=16797&#34; target=&#34;_blank&#34;&gt;GPX to shapefiles&lt;/a&gt; that worked but none seemed to recognize my heart rate data.&lt;/p&gt;
&lt;p&gt;The trick is Garmin extends the GPX specification to incorporate the heart rate:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;span style=&amp;quot;color: #333333;&amp;quot;&amp;gt;xmlns:gpxtpx=&amp;quot;http://www.garmin.com/xmlschemas/TrackPointExtension/v1&amp;quot;&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Each track point looks like this:&lt;/p&gt;
&lt;div id=&#34;LC15&#34; class=&#34;line&#34;&gt;
       &lt;trkpt lat=&#39;43.68346489146352&amp;#8243; lon=&#39;-92.99583793468773&amp;#8243;&gt;
&lt;/div&gt;
&lt;div id=&#34;LC16&#34; class=&#34;line&#34;&gt;
          &lt;time&gt;2014-03-16T20:35:47+00:00&lt;/time&gt;
&lt;/div&gt;
&lt;div id=&#34;LC17&#34; class=&#34;line&#34;&gt;
          &lt;ele&gt;296.20001220703125
&lt;/div&gt;
&lt;div id=&#34;LC18&#34; class=&#34;line&#34;&gt;
          &lt;extensions&gt;
&lt;/div&gt;
&lt;div id=&#34;LC19&#34; class=&#34;line&#34;&gt;
            &lt;gpxtpx:TrackPointExtension&gt;
&lt;/div&gt;
&lt;div id=&#34;LC20&#34; class=&#34;line&#34;&gt;
              &lt;gpxtpx:hr&gt;86
&lt;/div&gt;
&lt;div id=&#34;LC21&#34; class=&#34;line&#34;&gt;
            &lt;!--&lt;span class=&#34;hiddenSpellError&#34; pre=&#34;&#34; data-mce-bogus=&#34;1&#34;--&gt;gpxtpx:TrackPointExtension&gt;
&lt;/div&gt;
&lt;div id=&#34;LC22&#34; class=&#34;line&#34;&gt;
          &lt;/extensions&gt;
&lt;/div&gt;
&lt;div id=&#34;LC23&#34; class=&#34;line&#34;&gt;
        &lt;!--&lt;span class=&#34;hiddenSpellError&#34; pre=&#34;&#34; data-mce-bogus=&#34;1&#34;--&gt;trkpt&gt;
&lt;/div&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Since the first few exiting GPX converters failed to meet my needs, I decided to make my own, at least partially.&lt;/p&gt;
&lt;p&gt;I used Joel Lawhead of &lt;a href=&#34;http://geospatialpython.com&#34; target=&#34;_blank&#34;&gt;GeospatialPython.com&lt;/a&gt;‘s &lt;a href=&#34;https://code.google.com/p/pyshp/&#34; target=&#34;_blank&#34;&gt;pyshp&lt;/a&gt; library to handle writing the shapefile. I added some basic loop and I stuck a template.prj in the workspace that gets copied once for each shapefile.&lt;/p&gt;
&lt;p&gt;Otherwise, nothing too fancy going on.  The code can be downloaded from &lt;a href=&#34;https://github.com/MapRantala/Blog/tree/master/python/python/20140516_GPX2SHP&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import glob, os
import xml.etree.ElementTree as ET
import shapefile
import shutil

theNS = &amp;quot;{http://www.topografix.com/GPX/1/1}&amp;quot;.lower()
theNS2 = &amp;quot;{http://www.garmin.com/xmlschemas/TrackPointExtension/v1}&amp;quot;.lower()
templatePRJfile = &amp;quot;template.prj&amp;quot;

def elementIs(inElement,inTag):
    item1 = inTag.lower()
    item2 = elementName(inElement)
    return (inTag.lower() == elementName(inElement).lower())

def elementName(inElement):
    item1= inElement.tag.lower().replace(theNS,&amp;quot;&amp;quot;).replace(theNS2,&amp;quot;&amp;quot;)
    return item1

def convertTimeToSeconds(inTime):
    theSeconds = -1

    if (inTime.count(&amp;quot;:&amp;quot;)) == 2:
        try:
            inHour = inTime.split(&amp;quot;:&amp;quot;)[0]
            inMin = inTime.split(&amp;quot;:&amp;quot;)[1]
            inSec = inTime.split(&amp;quot;:&amp;quot;)[2]

            totalSec = float(inSec)
            totalSec += (float(inMin) * 60)
            totalSec += (float(inHour) * 3600)
            theSeconds = totalSec
        except:
            pass

    return theSeconds


def writeSHP(inSourceFile,inTrkList):
    w = shapefile.Writer(shapefile.POINT)
    w.field(&amp;quot;file&amp;quot;)
    w.field(&amp;quot;segment&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;8&amp;quot;,0)
    w.field(&amp;quot;vertex&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;8&amp;quot;,0)
    w.field(&amp;quot;datetime&amp;quot;,&amp;quot;C&amp;quot;,30)
    w.field(&amp;quot;date&amp;quot;,&amp;quot;C&amp;quot;,&amp;quot;10&amp;quot;,0)
    w.field(&amp;quot;time&amp;quot;,&amp;quot;C&amp;quot;,&amp;quot;8&amp;quot;,0)
    w.field(&amp;quot;sec&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;8&amp;quot;,0)
    w.field(&amp;quot;isec&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;8&amp;quot;,0)
    w.field(&amp;quot;totsec&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;8&amp;quot;,0)
    w.field(&amp;quot;elev&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;24&amp;quot;,14)
    w.field(&amp;quot;hr&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;8&amp;quot;,0)
    w.field(&amp;quot;last&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;1&amp;quot;,0)
    w.field(&amp;quot;lat&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;24&amp;quot;,16)
    w.field(&amp;quot;lon&amp;quot;,&amp;quot;N&amp;quot;,&amp;quot;24&amp;quot;,16)

    iTrkSegIndex = 0
    startSec =-1
    prevSec = -1
    for iTrkSeg in inTrkList:
        iTrkPtIndex = 0
        for iTrkPtDict in iTrkSeg:
            thisLine = &amp;quot;{0},{1},{2},*time*,*ele*,*hr*,*lat*,*lon*&amp;quot;.format(inSourceFile,iTrkSegIndex,iTrkPtIndex)

            theLat = None
            if (iTrkPtDict.has_key(&#39;lat&#39;)):
                try:
                    theLat = float(iTrkPtDict[&#39;lat&#39;])
                except:
                    pass

            theLon = None

            if (iTrkPtDict.has_key(&#39;lon&#39;)):
                try:
                    theLon = float(iTrkPtDict[&#39;lon&#39;])
                except:
                    pass

            theDate = None
            theTime = None
            theSeconds = -1
            segSeconds = -1
            totSeconds = -1

            if (iTrkPtDict.has_key(&#39;time&#39;)):
                theDateTime = iTrkPtDict[&#39;time&#39;]
                if (&amp;quot;T&amp;quot; in theDateTime):
                    theDate = theDateTime.split(&amp;quot;T&amp;quot;)[0]
                    theTimePlue = theDateTime.split(&amp;quot;T&amp;quot;)[1]
                    if (&amp;quot;+&amp;quot; in theTimePlue):
                        theTime = theTimePlue.split(&amp;quot;+&amp;quot;)[0]
                        theSeconds = convertTimeToSeconds(theTime)

                        if (prevSec &amp;lt; 0):
                            prevSec = theSeconds
                        if (startSec &amp;lt; 0):
                            startSec = theSeconds

                        segSeconds = theSeconds - prevSec
                        prevSec = theSeconds
                        totSeconds = theSeconds - startSec
            else:
                theDateTime = None

            if (iTrkPtDict.has_key(&#39;ele&#39;)):
                theElev = iTrkPtDict[&#39;ele&#39;]
            else:
                theElev = None

            if (iTrkPtDict.has_key(&#39;hr&#39;)):
                theHR = iTrkPtDict[&#39;hr&#39;]
            else:
                theHR = None

            if (iTrkPtIndex == len(iTrkSeg) - 1):
                theLast = 1
            else:
                theLast = 0

            w.point(theLon, theLat)
            try:
                                  w.record(inSourceFile.replace(&amp;quot;.gpx&amp;quot;,&amp;quot;&amp;quot;),iTrkSegIndex,iTrkPtIndex,theDateTime,theDate,theTime,theSeconds,segSeconds,totSeconds,theElev,theHR,theLast,theLat,theLon)

            except:
                print &amp;quot;############## ERROR ####################&amp;quot;
            iTrkPtIndex+=1

        iTrkSegIndex+=1


    w.save(inSourceFile.lower().replace(&amp;quot;.gpx&amp;quot;,&amp;quot;&amp;quot;))
    w = None
    if (os.path.exists(templatePRJfile)):
        newPRJFN = inSourceFile.lower().replace(&amp;quot;.gpx&amp;quot;,&amp;quot;.prj&amp;quot;)
        shutil.copyfile(templatePRJfile,newPRJFN)

def mainLoop():
    for iFile in glob.glob(&amp;quot;*.gpx&amp;quot;):
        print iFile
        tree = ET.parse(iFile)
        root=tree.getroot()

        theTrkList = []

        for iRoot in root:
            if elementIs(iRoot,&amp;quot;trk&amp;quot;): #&amp;quot;http://www.topografix.com/gpx/1/1}trk&amp;quot; in iRoot.tag.lower():
                for iTrkSeg in iRoot:
                    if not elementIs(iTrkSeg,&amp;quot;trkseg&amp;quot;):
                        continue
                    thisTrk = []

                    pntIndex = 0
                    for iTrkPt in iTrkSeg:
                        if not elementIs(iTrkPt,&amp;quot;trkpt&amp;quot;):
                            continue
                        trkPntDict = dict()
                        trkPntDict[&amp;quot;pntIndex&amp;quot;] = pntIndex
                        trkPntDict[&#39;lat&#39;] = iTrkPt.get(&#39;lat&#39;)
                        trkPntDict[&#39;lon&#39;] = iTrkPt.get(&#39;lon&#39;)

                        pntIndex+=1
                        for iElem in iTrkPt:
                            if elementIs(iElem,&amp;quot;extensions&amp;quot;):
                                for iSubElem in iElem:
                                    if (elementIs(iSubElem,&amp;quot;TrackPointExtension&amp;quot;)):
                                        for iExtensionElem in iSubElem:
                                            if elementIs(iExtensionElem,&amp;quot;hr&amp;quot;):
                                                trkPntDict[elementName(iExtensionElem)] = iExtensionElem.text
                            else:
                                trkPntDict[elementName(iElem)] = iElem.text

                        #print trkPntDict
                        thisTrk.append(trkPntDict)

                    theTrkList.append(thisTrk)
        writeSHP(iFile.lower(), theTrkList)


theLineList = mainLoop()

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debugging a Python Scheduled Task</title>
      <link>https://maprantala.com/2011/07/11/debugging-a-python-scheduled-task/</link>
      <pubDate>Mon, 11 Jul 2011 18:11:13 -0500</pubDate>
      <guid>https://maprantala.com/2011/07/11/debugging-a-python-scheduled-task/</guid>
      <description>&lt;p&gt;I have been working on a python script that I want (NEED) to run as a scheduled task on a remote machine.  I got to the point that the script did exactly what I needed when I was interactively running it in a Windows session but had problems when running it as a scheduled task.  The debugging process was cumbersome–make a change, schedule a task to run it, log out of the machine, and wait.  The log back in and repeat the process.&lt;/p&gt;
&lt;p&gt;That got old.&lt;/p&gt;
&lt;p&gt;So I wrote &lt;a href=&#34;http://dl.dropbox.com/u/22241283/NodeDangles/20110711_tester.zip&#34;&gt;a script  (tester.py)&lt;/a&gt; that calls any other python scripts in the same directory that (1) start with &amp;lsquo;test_&amp;rsquo; and (2) there is not a corresponding file with the same base name and &amp;lsquo;.start&amp;rsquo; extension.  It would launch &amp;lsquo;test_BaBing.py&amp;rsquo; as long as there is not a &amp;lsquo;test_BaBing.start&amp;rsquo; in the same directory.  Tester.py continued to run, looping every 60 seconds, until tester.stop exists.&lt;/p&gt;
&lt;p&gt;This made the process easier because I could work on my local machine, editing the problematic script, saving changes and within 60 seconds it would be launched on the remote machine.  I could view the results, make additional edits, delete the .start file and it would launch again within 60 seconds.&lt;/p&gt;
&lt;p&gt;Within a couple minutes I was able to determine the problem (path related) and fix it.&lt;/p&gt;
&lt;p&gt;Happy programmer.&lt;/p&gt;
&lt;p&gt;&lt;disclaimer&gt;I would recommend using this only while debugging a script–routinely running it could be a security risk since someone could copy a destructive python script into the directory and this would run it.&lt;/disclaimer&gt;&lt;/p&gt;
&lt;p&gt;Download: &lt;a href=&#34;http://dl.dropbox.com/u/22241283/NodeDangles/20110711_tester.zip&#34;&gt;tester.py&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import sys, string, os
import glob
import datetime, shutil
import time, inspect
import getpass

totalstarttime = datetime.datetime.now()

dateString = datetime.date.today().strftime(&amp;quot;%Y%m%d_&amp;quot;)+datetime.datetime.now().strftime(&amp;quot;%H%M%S&amp;quot;) #datetime.date.today().strftime(&amp;quot;%Y%m%d&amp;quot;)
debugfile = inspect.getfile(inspect.currentframe()).replace(&amp;quot;.py&amp;quot;,&amp;quot;_&amp;quot;+dateString+&amp;quot;_Debug.txt&amp;quot;)
stopfile = inspect.getfile(inspect.currentframe()).replace(&amp;quot;.py&amp;quot;,&amp;quot;.stop&amp;quot;)
newdebugfile = False

codeDir = os.path.dirname(inspect.getfile(inspect.currentframe())).replace(&amp;quot;\&amp;quot;,&amp;quot;/&amp;quot;)

def printit(inText):
    global newdebugfile

    print inText

    if os.path.exists(debugfile):
        if (newdebugfile == False):
            tmpfile = open(debugfile,&amp;quot;w&amp;quot;)
            newdebugfile = True
        else:
            tmpfile = open(debugfile,&amp;quot;a&amp;quot;)
    else:
        tmpfile = open(debugfile,&amp;quot;w&amp;quot;)

    tmpfile.write(inText)
    tmpfile.write(&amp;quot;n&amp;quot;)
    tmpfile.close()
    newdebugfile = True

stopFileExists = False
printit(&amp;quot;Code Directory: &amp;quot;+codeDir)
printit(&amp;quot;Starting at: &amp;quot;+datetime.date.today().strftime(&amp;quot;%Y-%m-%d_&amp;quot;)+datetime.datetime.now().strftime(&amp;quot;%H:%M:%S&amp;quot;))
printit(&amp;quot;Stopfile : &amp;quot;+stopfile+&amp;quot;/n&amp;quot;)
while (stopFileExists == False):
    for iFile in glob.glob(codeDir+&amp;quot;/test_*.py&amp;quot;):

        thisStartfile = iFile.replace(&amp;quot;.py&amp;quot;,&amp;quot;.start&amp;quot;)

        if not (os.path.exists(thisStartfile)):
            printit (&amp;quot;Launching: &amp;quot;+iFile)
            iTmpfile = open(thisStartfile,&amp;quot;w&amp;quot;)
            iTmpfile.write(&amp;quot;started&amp;quot;)
            iTmpfile.close()
            os.system(&amp;quot;Start &amp;quot;+iFile)

    if (os.path.exists(stopfile)):
        stopFileExists = True
    else:
        time.sleep(60)

    printit(&amp;quot;nEnd of Loop: &amp;quot;+datetime.date.today().strftime(&amp;quot;%Y-%m-%d_&amp;quot;)+datetime.datetime.now().strftime(&amp;quot;%H:%M:%S&amp;quot;)+&amp;quot;n&amp;quot;)    

printit(&amp;quot;Done!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;div id=&#34;geo-post-583&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Feature classes and Tables with names starting with &#39;nd_&#39;</title>
      <link>https://maprantala.com/2011/05/23/feature-classes-and-tables-with-names-starting-with-nd_/</link>
      <pubDate>Mon, 23 May 2011 15:55:24 -0500</pubDate>
      <guid>https://maprantala.com/2011/05/23/feature-classes-and-tables-with-names-starting-with-nd_/</guid>
      <description>&lt;p&gt;Random luck me to discovering a bug related to feature classes whose names start with &amp;lsquo;nd_&#39;.  It appears that you are allowed to create feature classes starting with &amp;lsquo;nd_&amp;rsquo; but ArcCatalog will not display them.  Further research shows this behavior also occurs for table and for ArcSDE (PostGres) geodatabases,  personal geodatabase, and file geodatabases–I am using ArcCatalog 10.0.&lt;/p&gt;
&lt;p&gt;I first noticed something odd was occurring while importing a series of shapefiles into a geodatabases.  After importing 15 shapefiles, I only had thirteen feature classes despite receiving no errors during the process.  The two shapefiles that failed to import were named ND_oil_and_gas.shp and ND_Bendix_Study.shp.  Subsequent attempts to import them individually returned an error &amp;lsquo;Invalid Target Name&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2011/05/invalidtargetname.png&#34; alt=&#34;Invalid Target Name&#34;&gt;&lt;/p&gt;
&lt;p&gt;I discovered in pgAdmin III (Postgres SDE Geodatabase) that the table existed and there was an entry in sde.sde_layers for the feature class but ArcCatalog refused to show it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2011/05/nd_2.png&#34; alt=&#34;nd_&#34;&gt;&lt;/p&gt;
&lt;p&gt;I used some un-supported methods to try to resolve the problem and despite some sweating, I failed to find a way to get ArcCatalog to display these feature classes.  I did, however, at least found a way to delete them–arcpy can detect that the feature classes exists so it is able to delete them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2011/05/arcpy_delete.png&#34; alt=&#34;arcpy.delete_management&#34;&gt;&lt;/p&gt;
&lt;p&gt;At least by deleting them, I can prevent leaving &amp;lsquo;invisible&amp;rsquo; feature classes from hanging out in my geodatabase.&lt;/p&gt;
&lt;p&gt;I suspect the problems stems from how ESRI has implemented the &lt;a href=&#34;http://help.arcgis.com/en/arcgisdesktop/10.0/help/index.html#//002p0000007m000000.htm&#34;&gt;Network dataset table-naming structure&lt;/a&gt; –dirty areas are stored in tables named _nd__dirtyareas and &lt;em&gt;nd__dirtyobjects. Possibly the developer  working on the ArcCatalog GUI ended up suppressing showing feature classes and tables whose names start with &amp;lsquo;nd&lt;/em&gt;&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;And, just for posterity&amp;rsquo;s sake, here is a python code snippet listing the feature classes in a workspace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; arcpy
 
arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;env&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;workspace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c:/temp/_nd/F.gdb&amp;#39;&lt;/span&gt;
 
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;env&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;workspace  
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; fc &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListFeatureClasses():  
   &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; fc
 
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Done!&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div id=&#34;geo-post-564&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Renaming Raster Dataset and arcpy.Exists()</title>
      <link>https://maprantala.com/2011/05/03/renaming-raster-dataset-and-arcpy.exists/</link>
      <pubDate>Tue, 03 May 2011 09:33:48 -0500</pubDate>
      <guid>https://maprantala.com/2011/05/03/renaming-raster-dataset-and-arcpy.exists/</guid>
      <description>&lt;p&gt;Discovered something today. I was working on an arcpy script that copies a raster dataset from a file geodatabase into a Postgres SDE geodatabase and then does some boring routine tasks–building stats, creating a mosaic dataset, adding the raster to the mosaic dataset and making a couple referenced mosaic datasets.&lt;/p&gt;
&lt;p&gt;It sometimes has trouble with the initial step of uploading the raster because of the sheer size of if (1m elevation raster for counties) and it failed today on one. It failed today so I used the ArcCatalog GUI to copy the raster and renamed it.&lt;/p&gt;
&lt;p&gt;I then proceeded to run launch my script. Before each step, I use &lt;a href=&#34;https://help.arcgis.com/en/arcgisdesktop/10.0/help/index.html#/Exists/000v00000021000000/&#34; target=&#34;_blank&#34;&gt;arcpy.Exists&lt;/a&gt; extensively to check to see if various items exist before I attempt to create them. It was continuously reporting that my raster set did not exist even though I could see it in ArcCatalog.&lt;/p&gt;
&lt;p&gt;Finally, I realized that I needed to close ArcCatalog before arcpy recognized the fact I had renamed something. To note, I was running arcpy from a separate PythonWin window, not from the ArcCatalog session I had renamed the raster dataset with.&lt;/p&gt;
&lt;p&gt;Once I closed ArcCatalog, arcpy recognized the renaming and life was good.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m also suspicious now about a problem I often have running statistics on my rasters.  The ArcTool reports no errors when I create them but for some reason the raster does not show that it has statistics afterwards.  I normally have multiple ArcApplication sessions open and now suspect that perhaps this problem is due to sessions not letting go of the connection.  Stay tuned for further developments on this.&lt;/p&gt;
&lt;div id=&#34;geo-post-546&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Quick &amp; Dirty arcpy: Batch Splitting Polylines to a Specific Length</title>
      <link>https://maprantala.com/2011/05/01/quick-dirty-arcpy-batch-splitting-polylines-to-a-specific-length/</link>
      <pubDate>Sun, 01 May 2011 05:01:50 -0500</pubDate>
      <guid>https://maprantala.com/2011/05/01/quick-dirty-arcpy-batch-splitting-polylines-to-a-specific-length/</guid>
      <description>&lt;p&gt;For some odd reason, I wanted to split all the arcs in a polyline feature class to a specific length–if a specific feature was longer than the target length, it would become two or more separate polyline records.&lt;/p&gt;
&lt;p&gt;Here is the &lt;a href=&#34;https://dl.dropbox.com/u/22241283/NodeDangles/20110429_Polyline%20Dicer.zip&#34; target=&#34;_blank&#34;&gt;bare-bones script&lt;/a&gt; that copies an existing feature class into a new feature class then processes each record, splitting it into multiple records if the polyline is longer than the user-specified tolerance.  Some cautionary notes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is Quick &amp;amp; Dirty code–minimal error catching or documentation.&lt;/li&gt;
&lt;li&gt;I basically tested this against one feature class (the one I wanted to split) once I got it to work, I quit.&lt;/li&gt;
&lt;li&gt;There is some rounding error–features may be a tad bit off (a few ten-thousandths of a unit).&lt;/li&gt;
&lt;li&gt;I did not test against multi-part features.&lt;/li&gt;
&lt;li&gt;The tolerance is the native units of the data–if your data is in meters but you want to split the polylines every mile, enter 1,609.344.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have included both a toolbox file (.tbx) and python script (.py).  After loading the toolbox, you&amp;rsquo;ll have to change the Source of the script by right-clicking on it, selecting the Source tab, and then navigating to the .py file.&lt;/p&gt;
&lt;p&gt;Here is the code for the Googlebots, but you are better off &lt;a href=&#34;http://dl.dropbox.com/u/22241283/NodeDangles/20110429_Polyline%20Dicer.zip&#34; target=&#34;_blank&#34;&gt;just downloading&lt;/a&gt; it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; arcpy
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; math

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printit&lt;/span&gt;(inMessage):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; inMessage
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AddMessage(inMessage)

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; len(sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; inFC &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; outFC &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; alongDistin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; alongDist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; float(alongDistin)
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; inFC &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/temp/asdfasdf.mdb/jkl&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; OutDir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/temp/asdfasdf.mdb&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; outFCName &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;jkl2d&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; outFC &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; OutDir&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;outFCName
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; alongDist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Exists(inFC)):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(inFC&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; does exist&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Cancelling, &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;inFC&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; does not exist&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exit(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;distPoint&lt;/span&gt;(p1, p2):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; calc1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;X &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; p2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;X
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; calc2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Y &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; p2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Y

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt((calc1&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(calc2&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;midpoint&lt;/span&gt;(prevpoint,nextpoint,targetDist,totalDist):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; newX &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prevpoint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;X &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ((nextpoint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;X &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; prevpoint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;X) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (targetDist&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;totalDist))
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; newY &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; prevpoint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Y &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ((nextpoint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Y &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; prevpoint&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Y) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (targetDist&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;totalDist))
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Point(newX, newY)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;splitShape&lt;/span&gt;(feat,splitDist):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;# Count the number of points in the current multipart feature&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; partcount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; feat&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;partCount
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; partnum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;# Enter while loop for each part in the feature (if a singlepart feature&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;# this will occur only once)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; lineArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Array()

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; partnum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; partcount:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;# Print the part number&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#print &amp;#34;Part &amp;#34; + str(partnum) + &amp;#34;:&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; part &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; feat&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getPart(partnum)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#print part.count&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; totalDist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; pnt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; part&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;next()
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; pntcount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; prevpoint &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; None
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; shapelist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;# Enter while loop for each vertex&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; pnt:

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; (prevpoint &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; None):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; thisDist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; distPoint(prevpoint,pnt)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; maxAdditionalDist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; splitDist &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; totalDist

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; thisDist, totalDist, maxAdditionalDist

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (totalDist&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;thisDist)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; splitDist:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;(totalDist&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;thisDist) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; splitDist:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; maxAdditionalDist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; splitDist &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; totalDist
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#print thisDist, totalDist, maxAdditionalDist&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; newpoint &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; midpoint(prevpoint,pnt,maxAdditionalDist,thisDist)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; lineArray&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(newpoint)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; shapelist&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(lineArray)

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; lineArray &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Array()
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; lineArray&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(newpoint)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; prevpoint &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; newpoint
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; thisDist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; distPoint(prevpoint,pnt)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; totalDist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; lineArray&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(pnt)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; totalDist&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;thisDist
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; totalDist&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;thisDist
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; lineArray&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(pnt)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#shapelist.append(lineArray)&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; lineArray&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(pnt)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; totalDist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; prevpoint &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pnt&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; pntcount &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; pnt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; part&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;next()

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;# If pnt is null, either the part is finished or there is an&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#&amp;amp;nbsp;&amp;amp;nbsp; interior ring&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#75715e&#34;&gt;#&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; pnt:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; pnt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; part&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;next()
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; pnt:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Interior Ring:&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; partnum &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (lineArray&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;count &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; shapelist&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;append(lineArray)

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; shapelist

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Exists(outFC):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Delete_management(outFC)

arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Copy_management(inFC,outFC)

&lt;span style=&#34;color:#75715e&#34;&gt;#origDesc = arcpy.Describe(inFC)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#sR = origDesc.spatialReference&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#revDesc = arcpy.Describe(outFC)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#revDesc.ShapeFieldName&lt;/span&gt;

deleterows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;UpdateCursor(outFC)
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; iDRow &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; deleterows:&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; deleterows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;deleteRow(iDRow)

&lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; iDRow
&lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; deleterows

inputRows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SearchCursor(inFC)
outputRows &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;InsertCursor(outFC)
fields &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListFields(inFC)

numRecords &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; int(arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;GetCount_management(inFC)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getOutput(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;))
OnePercentThreshold &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; numRecords &lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;

printit(numRecords)

iCounter &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
iCounter2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; iInRow &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; inputRows:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; inGeom &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iInRow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; iCounter&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; iCounter2&lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (iCounter2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; (OnePercentThreshold&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; printit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Processing Record &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;str(iCounter) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; of &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; str(numRecords))
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; iCounter2&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (inGeom&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; alongDist):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; shapeList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; splitShape(iInRow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape,alongDist)

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; itmp &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; shapeList:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; newRow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; outputRows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;newRow()
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ifield &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; fields:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (ifield&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;editable):
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; newRow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;setValue(ifield&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name,iInRow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getValue(ifield&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name))
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; newRow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;shape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; itmp
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; outputRows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insertRow(newRow)
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;nbsp; outputRows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;insertRow(iInRow)

&lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; inputRows
&lt;span style=&#34;color:#66d9ef&#34;&gt;del&lt;/span&gt; outputRows

printit(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Done!&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div id=&#34;geo-post-528&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Change Detector arcpy Script</title>
      <link>https://maprantala.com/2011/04/08/change-detector-arcpy-script/</link>
      <pubDate>Fri, 08 Apr 2011 10:48:59 -0500</pubDate>
      <guid>https://maprantala.com/2011/04/08/change-detector-arcpy-script/</guid>
      <description>&lt;p&gt;During a process I was working on, I needed to compare a feature class before and after some edits.  I did not quickly find anything in ArcToolbox but searching &lt;a href=&#34;https://resources.arcgis.com/&#34; target=&#34;_blank&#34;&gt;ArcResources&lt;/a&gt; led me to &lt;a href=&#34;https://resources.arcgis.com/gallery/file/Geoprocessing-Model-and-Script-Tool-Gallery/details?entryID=351BEE10-1422-2418-8815-82074A3E6B6C&#34; target=&#34;_blank&#34;&gt;Change Detector script by Bruce Harold&lt;/a&gt;.  After making a couple of tweaks–for some reason in one of my feature classes, the Shape field had an upper case &amp;lsquo;S&amp;rsquo; and in the other it was a lower case &amp;rsquo;s&#39;.  I also discovered that it needs to export to the same format (personal geodatabase, file geodatabase, shapefile) as the source data (or at least one that uses the same field name deliminator).&lt;/p&gt;
&lt;p&gt;After minor adjustments, though, it worked like a charm.  I&amp;rsquo;ll be submitting the changes I made to Bruce and let him incorporate the changes into the official code.&lt;/p&gt;
&lt;p&gt;FOLLOW-UP: Mr. Harold quickly responded to my email &amp;amp; made the change (although I haven&amp;rsquo;t checked it). Way to go Bruce!  Thanks for a handy script.&lt;/p&gt;
&lt;div id=&#34;geo-post-508&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Using arcpy to List Domains Assigned to Featureclass Fields</title>
      <link>https://maprantala.com/2011/03/14/using-arcpy-to-list-domains-assigned-to-featureclass-fields/</link>
      <pubDate>Mon, 14 Mar 2011 18:04:36 -0500</pubDate>
      <guid>https://maprantala.com/2011/03/14/using-arcpy-to-list-domains-assigned-to-featureclass-fields/</guid>
      <description>&lt;p&gt;I was making an edit (adding leading &amp;lsquo;0&amp;rsquo;s) to a coded-value domain in an SDE database and realized that my edits were changing the order of the rows of my domain.  Rows were moved to the bottom of the list when they were edited.&lt;/p&gt;
&lt;p&gt;So I went through the process of converting my domain back to a table, made my edits in Access and exported the rows to a .dbf in the order I wanted them.&lt;/p&gt;
&lt;p&gt;I removed the domain from the field I knew it was assigned to but when I tried to delete the domain, I received an error (The domain is used as a default domain).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2011/03/failedtodeletedomain.png&#34; alt=&#34;The domain is used as a default domain.&#34;&gt;&lt;/p&gt;
&lt;p&gt;The Google Machine led me to an &lt;a href=&#34;http://forums.esri.com/Thread.asp?c=93&amp;f=985&amp;t=303616&#34; target=&#34;_blank&#34;&gt;ArcForums post&lt;/a&gt; by  with some python code for listing all the fields with a domain.&lt;/p&gt;
&lt;p&gt;I tweaked the original a bit, first because it was only examining feature classes in a feature dataset, not stand-alone feature datasets.  And secondly, I updated it to use arcpy.  I posted both the &lt;a href=&#34;http://dl.dropbox.com/u/22241283/NodeDangles/20110314_ListDomains-9_3.zip&#34; target=&#34;_blank&#34;&gt;9.3 version&lt;/a&gt; and the &lt;a href=&#34;http://dl.dropbox.com/u/22241283/NodeDangles/20110314_ListDomains-10.zip&#34; target=&#34;_blank&#34;&gt;10.0 version&lt;/a&gt;, but here is a quick look.  The key addition is the &amp;ldquo;listfc(&#39;&#39;)&amp;rdquo; line that is the first line of the def listds() module.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; arcpy

min_workspace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:\Users\mranter\AppData\Roaming\ESRI\Desktop10.0\ArcCatalog\min.minstaff.sde&amp;#34;&lt;/span&gt;

infgdb&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(min_workspace)
arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;env&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;workspace &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; infgdb

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listfc&lt;/span&gt;(inDataset):
   featureclasses &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListFeatureClasses(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,inDataset)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; f &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; featureclasses:
      &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;feature class: &amp;#34;&lt;/span&gt;,f

lfields&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListFields(f)

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; lf &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; lfields:
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; lf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;domain &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;:
      &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;      domain&amp;#34;&lt;/span&gt;,f, lf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;name, lf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;domain

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;listds&lt;/span&gt;():
   listfc(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)

   datasets&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ListDatasets (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
   &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; datasets:
      &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;  dataset: &amp;#34;&lt;/span&gt;,d

listfc(d)
listds()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div id=&#34;geo-post-440&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ArcMap Field Calculator: Calculating Geometry using arcpy</title>
      <link>https://maprantala.com/2011/03/08/arcmap-field-calculator-calculating-geometry-using-arcpy/</link>
      <pubDate>Tue, 08 Mar 2011 09:30:40 -0600</pubDate>
      <guid>https://maprantala.com/2011/03/08/arcmap-field-calculator-calculating-geometry-using-arcpy/</guid>
      <description>&lt;p&gt;One of the things I had not gotten around to doing in ArcGIS 10 was figure out how to directly manipulate the geometry of a record using the &lt;a href=&#34;http://help.arcgis.com/en/arcgisdesktop/10.0/help/index.html#//005s00000025000000.htm&#34; target=&#34;_blank&#34;&gt;Field Calculator&lt;/a&gt;.  When I stumbled upon a bug in the way the &lt;a href=&#34;https://maprantala.com/2011/03/07/extract-values-to-points-spatial-analyst-bug/&#34; target=&#34;_blank&#34;&gt;Extract Values to Points&lt;/a&gt; tool handles Null geometries, I figured it was time to figure it out.  Setting the X, Y to 0,0 was sufficient for my needs.&lt;/p&gt;
&lt;p&gt;I set the Parser to Python and the formula was simple once I figured out the syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;pPoint &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Point(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2011/03/origin.jpg&#34; alt=&#34;Use Field Calculator to Calculate Geometry&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then, to extend my knowledge, I wanted to see how to calculate the geometry based off of two fields (X and Y).   The only real trick is knowing the bracket field names using exclamation points instead of brackets:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Point(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;X&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;,&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;Y&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;!&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2011/03/fields.jpg&#34; alt=&#34;Using Field Calculating to Calculate Geometry Using Attributes&#34;&gt;&lt;/p&gt;
&lt;p&gt;So turns out everything it pretty easy and straight-forward.  Whew!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Loading Tiled, Same-Name Data in Batch Mode.</title>
      <link>https://maprantala.com/2011/02/28/loading-tiled-same-name-data-in-batch-mode./</link>
      <pubDate>Mon, 28 Feb 2011 12:30:43 -0600</pubDate>
      <guid>https://maprantala.com/2011/02/28/loading-tiled-same-name-data-in-batch-mode./</guid>
      <description>&lt;p&gt;I have been loading existing raster data into a geodatabase to be included in a new Mosaic Dataset–a very cool and useful addition to ArcGIS 10. The most time-consuming part of the process for the human (at least this human) has been getting the names of the rasters right.&lt;/p&gt;
&lt;p&gt;Our existing data is organized by tiles with the directory name representing the tile name and then the data within each tile directory having the same name.&lt;/p&gt;
&lt;p&gt;For example:&lt;br&gt;
C:\GIS_dataAdamsparcels.shp&lt;br&gt;
C:\GIS_dataBuchetteparcels.shp&lt;/p&gt;
&lt;p&gt;This makes batch loading the data less efficient because I end up having to rename the data or else end up with a series of feature classes named parcels, parcels_2, parcels_n.&lt;/p&gt;
&lt;p&gt;So I hacked out a quick script that takes an input raster and figures out the final name I want it to have based of the directory name.&lt;/p&gt;
&lt;p&gt;First, I used the Copy Raster (In ArcToolbox: Data Management-Raster-Raster Dataset-Copy Raster) and copied on sample to my geodatabase.&lt;/p&gt;
&lt;p&gt;Then, I went to the Results Tab (Select Geoprocessing from the Menubar, Geoprocessing-Results) and right-clicked on the Copy Raster result and selected &amp;lsquo;Copy as Python Snippet&amp;rsquo;.&lt;/p&gt;
&lt;p&gt;I then created a new python script and pasted the one line.&lt;/p&gt;
&lt;p&gt;I added some imports, accepted a parameter, some string manipulation, and some result outputs and I had a quick &amp;amp; easy script. In added the script in ArcToolbox and now I can right-click on it and run it in Batch mode. I do a quick search in Windows Explorer to get all the rasters I want to run it on and select &amp;amp; drag them to my ArcToolbox Batch Dialog.&lt;/p&gt;
&lt;p&gt;Actual code can be downloaded &lt;a href=&#34;http://dl.dropbox.com/u/22241283/NodeDangles/20110228_load_lidar_data.zip&#34; target=&#34;_blank&#34;&gt;HERE&lt;/a&gt; and you don&amp;rsquo;t need to worry about WordPress messing up the spacing.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; arcpy
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; sys

inRaster &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;argv[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] 
basedir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basename(os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dirname(inRaster))&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower()
outRaster &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Database Connections/mgs_lidar.lidar.sde/mgs_lidar.lidar.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;basedir

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;printit&lt;/span&gt;(inMessage):
    &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; inMessage
    arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AddMessage(inMessage)
    
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; (arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Exists(outRaster)):
    printit (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Importing: &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;basedir)
    arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CopyRaster_management(inRaster,outRaster,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NONE&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NONE&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;#&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
    printit (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Skipping: &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;basedir&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; because it already exists!&amp;#34;&lt;/span&gt;)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div id=&#34;geo-post-385&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Checking to see if a Field Index Exists Using Arcpy (ArGIS 10.0)</title>
      <link>https://maprantala.com/2011/02/21/checking-to-see-if-a-field-index-exists-using-arcpy-argis-10.0/</link>
      <pubDate>Mon, 21 Feb 2011 09:55:35 -0600</pubDate>
      <guid>https://maprantala.com/2011/02/21/checking-to-see-if-a-field-index-exists-using-arcpy-argis-10.0/</guid>
      <description>&lt;p&gt;Updating some python code from 9.3 that using geoprocessing  to 10.0 using arcpy and the first real object I&amp;rsquo;ve had to change relates to detecting whether or not an index exists on a table.&lt;/p&gt;
&lt;p&gt;I previously &lt;a href=&#34;https://maprantala.com/2011/01/27/checking-to-see-if-a-field-index-exists-using-python/&#34;&gt;posted code&lt;/a&gt; using a 9.3 geoprocessing commands, the core of it being:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;indexList &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listindexes(tablename)
&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; iIndex &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; indexList:
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (iIndex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Name &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; indexname):
       &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;With arcpy, ESRI has gone back to using the &lt;a href=&#34;http://help.arcgis.com/en/arcgisdesktop/10.0/help/index.html#/Describe/000v00000026000000/&#34; target=&#34;_blank&#34;&gt;Describe&lt;/a&gt; methodology.  Way back when GISers use to type most of their commands into their wood-burning computers, the command &amp;lsquo;Describe&amp;rsquo; was used to retrieve information about a coverage, grid, or other data set in our fancy AMLs (or SMLs).  The snippet below shows a function for checking to see if a table has an index with a specified named.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;indexExists&lt;/span&gt;(tablename,indexname):

 &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Exists(tablename):
  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False

 tabledescription &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcpy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Describe(tablename)

 &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; iIndex &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; tabledescription&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;indexes:
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (iIndex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Name &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; indexname):
   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True

 &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div id=&#34;geo-post-364&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Zipping a File Geodatabase using Python</title>
      <link>https://maprantala.com/2011/02/08/zipping-a-file-geodatabase-using-python/</link>
      <pubDate>Tue, 08 Feb 2011 13:44:34 -0600</pubDate>
      <guid>https://maprantala.com/2011/02/08/zipping-a-file-geodatabase-using-python/</guid>
      <description>&lt;p&gt;Ever since the ever-popular post, &lt;a href=&#34;https://maprantala.com/2010/12/10/zipping-a-shapefile-using-python/&#34;&gt;Zipping a shapefile using python&lt;/a&gt;, came out, people have been asking (one person, yesterday) for a sample of how to zip a file geodatabase using python.&lt;/p&gt;
&lt;p&gt;The key trick, as shown in line 17, is appending the basename of the file geodatabase (&amp;lsquo;nfg.gdb/&amp;rsquo; in my example) in front of each file as you write it to the zipfile.&lt;/p&gt;
&lt;p&gt;UPDATE: WordPress messes with the spacing when I post code, making it difficult to post code that can just be copied &amp;amp; pasted and have work.  So I have posted a the code &lt;a href=&#34;http://dl.dropbox.com/u/22241283/NodeDangles/20110208_Sample_Zip_FileGeodatabase.zip&#34;&gt;HERE&lt;/a&gt; for downloading.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; zipfile
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; glob

infile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c:/temp/nfg.gdb&amp;#34;&lt;/span&gt;
outfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c:/temp/nfg.zip&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;zipFileGeodatabase&lt;/span&gt;(inFileGeodatabase, newZipFN):
   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; (os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(inFileGeodatabase)):
      &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False

   &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(newZipFN)):
      os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(newZipFN)

   zipobj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zipfile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ZipFile(newZipFN,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;)

   &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; infile &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; glob&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glob(inFileGeodatabase&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/*&amp;#34;&lt;/span&gt;):
      zipobj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(infile, os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basename(inFileGeodatabase)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basename(infile), zipfile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ZIP_DEFLATED)
      &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zipping: &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;infile)

   zipobj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()

   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True

zipFileGeodatabase(infile,outfile)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div id=&#34;geo-post-312&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Multiple outputs for Python scripts</title>
      <link>https://maprantala.com/2010/12/17/multiple-outputs-for-python-scripts/</link>
      <pubDate>Fri, 17 Dec 2010 15:19:38 -0600</pubDate>
      <guid>https://maprantala.com/2010/12/17/multiple-outputs-for-python-scripts/</guid>
      <description>&lt;p&gt;Related to my &lt;a href=&#34;https://maprantala.com/2010/12/13/launching-a-python-script-with-parameters-3-methods/&#34;&gt;post&lt;/a&gt; on how I enable a script to accept parameters from different sources, I also often set up pythons scripts to output information a variety of ways.  This is largely due to the fact that some are called by ArcToolbox scripts.  Running in ESRI&amp;rsquo;s domain, these scripts need to send the output through the arcgisscripting object but if you are running the python outside the ArcGIS framework, you can just print.&lt;/p&gt;
&lt;p&gt;If you assume one output method but then run your code in the opposite framework, you don&amp;rsquo;t get to see all the pretty little messages.  What I do is create a simple little routine that broadcasts the message both ways.  This is probably an obvious solution but took a few cases before I went ahead and started implementing it.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcgisscripting&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create()

&lt;span style=&#34;color:#75715e&#34;&gt;#This will print both to the geoprocessing window or Python output window&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;gpprint&lt;/span&gt;(inmessage):
 gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;addmessage(inmessage)
 &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; inmessage

&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Code to do stuff&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#Ok, I want to send a message:&lt;/span&gt;
gpprint(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Hello, sailor!&amp;#39;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Zipping a shapefile via ArcToolbox</title>
      <link>https://maprantala.com/2010/12/15/zipping-a-shapefile-via-arctoolbox/</link>
      <pubDate>Wed, 15 Dec 2010 14:36:04 -0600</pubDate>
      <guid>https://maprantala.com/2010/12/15/zipping-a-shapefile-via-arctoolbox/</guid>
      <description>&lt;h2 id=&#34;update&#34;&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://maprantala.com/2014/05/06/zipping-a-shapefile-from-arccatalog/&#34;&gt;After receiving a request to modify the code to ignore .lock files, I have an updated to this post.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve received a request on how to use the &lt;a href=&#34;https://maprantala.com/2010/12/10/zipping-a-shapefile-using-python/&#34;&gt;Zip Shapefile&lt;/a&gt; code I posted last week from ArcGIS. Sorry, I did not set the code up to call directly from ArcGIS but only as an illustration of how it can be done.&lt;/p&gt;
&lt;p&gt;I have, however, with some minor tweaking, made a version that can added to ArcToolbox. The steps to install are below, please note that at one point I had you download a *.zip file that had been renamed to *.jpg–this should now be corrected and the link should lead you directly to zipshapefile.zip.  Because of this steps two and three are obsolete.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the code from here.&lt;/li&gt;
&lt;li&gt;&lt;del&gt;Rename the file from zipshapefile-zip.jpg back to zipshapefile.zip.&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;Unzip the file.&lt;/li&gt;
&lt;li&gt;Move ZipShapefile.py to C:Program FilesArcGISArcToolBoxScriptsZipShapefile.py.&lt;/li&gt;
&lt;li&gt;Optionally, move Zip Shapefile.tbx, perhaps C:Program FilesArcGISArcToolBoxToolboxes.&lt;/li&gt;
&lt;li&gt;Add the toolbox to ArcToolbox. ESRI has instructions &lt;a href=&#34;http://webhelp.esri.com/arcgisdesktop/9.3/tutorials/spatial/Spatial_14.htm&#34; target=&#34;_blank&#34;&gt;here&lt;/a&gt; on how to do this.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now have a new toolbox named &amp;lsquo;Zip Shapefile&amp;rsquo; with a script named &amp;lsquo;Zip a Shapefile&amp;rsquo; in it. Clicking on on the tool will bring up this dialog.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2010/12/capture.jpg?resize=271%2C71&#34; alt=&#34;Zip a Shapefile Dialog&#34;&gt;&lt;/p&gt;
&lt;p&gt;*&lt;strong&gt;*&lt;/strong&gt;*&lt;strong&gt;*&lt;/strong&gt;*&lt;strong&gt;*&lt;/strong&gt;*&lt;strong&gt;*&lt;/strong&gt;*&lt;strong&gt;*&lt;/strong&gt;****&lt;br&gt;
In response to Chris:&lt;/p&gt;
&lt;p&gt;I believe you need to copy the ZipShapefile.py file from the .zip that you downloaded to C:Program FilesArcGISArcToolBoxScripts, the error message is consistent with the tool not being about to find the python script there.&lt;/p&gt;
&lt;p&gt;If you prefer to place the ZipShapefile.py in a different location, you will need to change the source on the tool. To do this, right click on the tool in ArcCatalog and change the path of the Script File as set in the Source tab (see below):
&lt;img src=&#34;https://maprantala.com/images/2012/03/setpath.png?resize=494%2C265&#34; alt=&#34;set Path&#34;&gt;&lt;/p&gt;
&lt;div id=&#34;geo-post-246&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Launching a Python script with parameters–3 methods.</title>
      <link>https://maprantala.com/2010/12/13/launching-a-python-script-with-parameters3-methods./</link>
      <pubDate>Mon, 13 Dec 2010 14:56:43 -0600</pubDate>
      <guid>https://maprantala.com/2010/12/13/launching-a-python-script-with-parameters3-methods./</guid>
      <description>&lt;p&gt;Since I use python for different tasks, I launch python scripts a variety of ways. Depending on what I am doing, a single script may need to accept parameters from either:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Passed in from an ArcGIS Toolbox Tool.&lt;/li&gt;
&lt;li&gt;Re-occurring default value.  Often used in scheduled processes, a nightly backup, for example.&lt;/li&gt;
&lt;li&gt;A temporary set of values used in an interactive, debugging session.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;What I often do is make the parameter interpretation flexible to meet my needs.  The sample below shows how I do this.  The logic first checks to see if the correct number of parameters were used to launch the script (i.e. if it is called by an Arc Toolbox tool), where the files for the default files exist or if the debug values are valid, including checking the current date against a hard-coded date variable.  Juggling the conditional structure would allow you to prioritize the options differently.&lt;/p&gt;
&lt;p&gt;I am also using Tkinter to display an interactive dialog if none of the three conditions are successfully met.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import os.path
import datetime
import shutil
import sys

theEmailText = &amp;quot;nStart: &amp;quot; + str(datetime.datetime.now())

#This example shows three different ways for a script to receive input paramters.
#
# First, if it was run with the necessary number of parameters, as if launched by
# an ArcToolbox tool, it uses those parameters.

if len(sys.argv) == 2:
    wellsShapeFile = sys.argv[0]
    unwellsShapeFile = sys.argv[1]
    theEmailText = theEmailText + &amp;quot;nUsing Parameters Passed In:nn Located Wells File: &amp;quot;+wellsShapeFile+&amp;quot;n Unlocated Wells File: &amp;quot;+unwellsShapeFile
else:
    dateString = datetime.date.today().strftime(&amp;quot;%Y%m%d&amp;quot;)
    wellsShapeFile = &amp;quot;C:/cwi5_bk/wells/temp/wells_.shp&amp;quot;
    unwellsShapeFile = &amp;quot;C:/cwi5_bk/wells/temp/unloc_wells.shp&amp;quot;

    #Second attempt is if there are default values that should be used.
    #I use this for a process that is run via scheduled Windows Task
    if (os.path.exists(wellsShapeFile)) and (os.path.exists(unwellsShapeFile)):
        theEmailText = theEmailText + &amp;quot;nUsing Automated Date-Based file names:nn Located Wells File: &amp;quot;+wellsShapeFile+&amp;quot;n Unlocated Wells File: &amp;quot;+unwellsShapeFile
    else:
        #The third method is used for debugging/running in the IDE.
        #I put a check condition so this is valid for one day only
        #And then hard-code the temporary paths.
        #
        #Note that you may want to modify the structure of the IF statement
        #used for methods 2 &amp;amp; 3 so that it checks for the manual-override (3rd)
        #method first
        if dateString == &#39;20101213&#39;:
            wellsShapeFile = &amp;quot;C:/cwi5_bk/wells/temp/wells.shp&amp;quot;
            unwellsShapeFile = &amp;quot;C:/cwi5_bk/wells/temp/unloc.shp&amp;quot;
            theEmailText = theEmailText + &amp;quot;nUsing Manual Override file names:nn Located Wells File: &amp;quot;+wellsShapeFile+&amp;quot;n Unlocated Wells File: &amp;quot;+unwellsShapeFile
        else:
            theEmailText = theEmailText + &amp;quot;n Manual Override for file names does not meet data filter&amp;quot;

    if (not os.path.exists(wellsShapeFile)) or (not os.path.exists(unwellsShapeFile)):
        from Tkinter import *
        msgbox = Tk()
        msgbox.title(&#39;Error&#39;)
        Message(msgbox,text=&amp;quot;Must either use ArcTool to launch or edit file parameters&amp;quot;, bg=&#39;royalblue&#39;,fg=&#39;ivory&#39;, relief=GROOVE).pack(padx=10, pady=10)
        msgbox.mainloop()
        print theEmailText
        quit()

print theEmailText
&lt;/code&gt;&lt;/pre&gt;&lt;div id=&#34;geo-post-252&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.852994&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.55073&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Zipping a shapefile using python</title>
      <link>https://maprantala.com/2010/12/10/zipping-a-shapefile-using-python/</link>
      <pubDate>Fri, 10 Dec 2010 18:20:13 -0600</pubDate>
      <guid>https://maprantala.com/2010/12/10/zipping-a-shapefile-using-python/</guid>
      <description>&lt;h2 id=&#34;update&#34;&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://maprantala.com/2014/05/06/zipping-a-shapefile-from-arccatalog/&#34;&gt;After receiving a request to modify the code to ignore .lock files, I have an updated to this post.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;One of the tasks I&amp;rsquo;ve been automating is publishing a weekly data update to a website. The update consists of shapefile. The trouble with shapefiles is they consist of 3 or more files with the same basename but different extensions in the same directory.&lt;/p&gt;
&lt;p&gt;Not an overly complicated situation but a common one that ArcGIS does not have a solution out-of-the-box. Below is a bare-bones code snippet to do it. It has both the input shapefile and output zip file hard-coded. The call to the subroutine that does the work is: zipShapefile(wellsShapeFile,wellsZipFile)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; zipfile
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; glob
wellsShapeFile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/cwi5_bk/WELLS/wells.SHP&amp;#34;&lt;/span&gt;
wellsZipFile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/cwi5_bk/WELLS/test5.zip&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;zipShapefile&lt;/span&gt;(inShapefile, newZipFN):
   &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Starting to Zip &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;inShapefile&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; to &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;newZipFN

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; (os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(inShapefile)):
   &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; inShapefile &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; Does Not Exist&amp;#39;&lt;/span&gt;
   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(newZipFN)):
   &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Deleting &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;newZipFN
   os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;remove(newZipFN)

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exists(newZipFN)):
   &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Unable to Delete&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;newZipFN
   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; False

zipobj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zipfile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ZipFile(newZipFN,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;)

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; infile &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; glob&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glob( inShapefile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lower()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.shp&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.*&amp;#34;&lt;/span&gt;)):
   &lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; infile
   zipobj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;write(infile,os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;basename(infile),zipfile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ZIP_DEFLATED)

zipobj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;close()
&lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; True

zipShapefile(wellsShapeFile,wellsZipFile)
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;done!&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div id=&#34;geo-post-236&#34; class=&#34;geo geo-post&#34; style=&#34;display: none&#34;&gt;
  &lt;span class=&#34;latitude&#34;&gt;44.979965&lt;/span&gt;&lt;span class=&#34;longitude&#34;&gt;-93.263836&lt;/span&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>TopoToRaster Error</title>
      <link>https://maprantala.com/2010/09/13/topotoraster-error/</link>
      <pubDate>Mon, 13 Sep 2010 20:25:01 -0500</pubDate>
      <guid>https://maprantala.com/2010/09/13/topotoraster-error/</guid>
      <description>&lt;p&gt;In running an automated process, I had a TopoToRaster repeatedly fail on me. The only input theme was a contour theme. The process ran fine when I used the envelope of the contour theme as the output extent but when I changed it to the envelope of a polygon theme, it would bomb. The polygon&amp;rsquo;s envelope was smaller than the contour theme.&lt;/p&gt;
&lt;p&gt;ArcCatalog would bomb out without presenting any sort of useful message.&lt;/p&gt;
&lt;p&gt;I determined eventually that If I set the left extent as 435210, the process would work if set the right extent to 446655 or greater but would bomb if I used 446654 or less. If the the left extent was 435209, the right extent had to be 446654 or greater.&lt;/p&gt;
&lt;p&gt;The image below shows the contours (with vertexes) and the polygon theme I was using. The two circle graphics show the approximate extent I was clipping to.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images//2010/09/topotoraster.jpg?resize=453%2C381&#34; alt=&#34;topotoRaster&#34;&gt;&lt;/p&gt;
&lt;p&gt;I eventually wrote python script to do a series of tests with the intent of determining the pattern of what does and does not work. The unexpected benefit was I actually got some sort of error message back. Turns out it had to do with my lack of vertices–I densified my polylines and it ran fine. Something I should have thought of earlier but it was difficult lacking any feedback.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://maprantala.com/images/2010/09/untitled.jpg?resize=535%2C271&#34; alt=&#34;Options&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Accessing Network Drives via Scheduled Python Task</title>
      <link>https://maprantala.com/2010/07/26/accessing-network-drives-via-scheduled-python-task/</link>
      <pubDate>Mon, 26 Jul 2010 12:43:02 -0500</pubDate>
      <guid>https://maprantala.com/2010/07/26/accessing-network-drives-via-scheduled-python-task/</guid>
      <description>&lt;p&gt;As previously mentioned, I have a scheduled nightly backup that is written in Python.  Most of it has been working fine but I had not gotten it to copy files to network drives.  I finally got around to correcting that part.  My first attempt was just to map the network drives for the user account that is used to run the task.  No good.&lt;/p&gt;
&lt;p&gt;My second attempt was to call a .bat file from python before accessing the network drives and that worked.&lt;/p&gt;
&lt;p&gt;The batch file has two lines (one for each network drive):&lt;/p&gt;
&lt;p&gt;net use n: \domain1sharename mypassword /USER:domainusername&lt;br&gt;
net use t: \domain2sharename mypassword /USER:domainusername&lt;/p&gt;
&lt;p&gt;And my python script includes two lines to call it before I access the network locations:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import os
os.system(&#39;C:/cwi5_bk/mapDrive.bat&#39;)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Python emailer</title>
      <link>https://maprantala.com/2010/07/09/python-emailer/</link>
      <pubDate>Fri, 09 Jul 2010 17:20:38 -0500</pubDate>
      <guid>https://maprantala.com/2010/07/09/python-emailer/</guid>
      <description>&lt;p&gt;So I have a nightly process that runs and I, being the lazy programmer I am, didn&amp;rsquo;t want to bother checking a log file each morning to see how it went. The natural answer is to have the results emailed to me because I do have to check my email.&lt;/p&gt;
&lt;p&gt;Since the process is already handled mostly in python, thought I would implement the emailing via python. It was actually simple enough to do–just required figuring out the setting for my SMTP server (actually I didn&amp;rsquo;t figure it our for my work server so I&amp;rsquo;m using my GMail account).&lt;/p&gt;
&lt;p&gt;I first wrote eMailer.py (see code below) and included it in my python path. Now, whenever I want to send code from a python application, it takes two easy lines:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; eMailer
eMailer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SendMess(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;someoneg@company.com&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Subject&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Text Body&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;emailerpy&#34;&gt;eMailer.py&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; smtplib
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; email.MIMEMultipart &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; MIMEMultipart
&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; email.MIMEText &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; MIMEText

fromaddr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;node.dangles AT gmail.com&amp;#39;&lt;/span&gt;
password &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;myFancyPassword&amp;#39;&lt;/span&gt;
smtpaddr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;smtp.gmail.com&amp;#39;&lt;/span&gt;
smtpport &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;587&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;SendMess&lt;/span&gt;(toadd, subject, body):

msg &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MIMEMultipart()
msg[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;From&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fromaddr
msg[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;To&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; toadd
msg[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Subject&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; subject
msg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;attach(MIMEText(body, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;plain&amp;#39;&lt;/span&gt;))

text &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; msg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;as_string()

server &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; smtplib&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;SMTP(smtpaddr, smtpport)
server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ehlo()
server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;starttls()
server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ehlo()
server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;login(fromaddr, password)

server&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sendmail(fromaddr, toadd, text)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>NED Processing in Python and Geoprocessing</title>
      <link>https://maprantala.com/2010/07/07/ned-processing-in-python-and-geoprocessing/</link>
      <pubDate>Wed, 07 Jul 2010 14:05:20 -0500</pubDate>
      <guid>https://maprantala.com/2010/07/07/ned-processing-in-python-and-geoprocessing/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://www.usgs.gov/&#34; target=&#34;_blank&#34;&gt;USGS&lt;/a&gt; updated a significant portion of &lt;a href=&#34;http://ned.usgs.gov/&#34; target=&#34;_blank&#34;&gt;NED&lt;/a&gt; data for my state in June.  I recently downloaded the updates, processed them–projecting and converting the elevations from meters to feet–using python and geoprocessing.  My python skills are still pretty crude but I was able to get the job done.&lt;/p&gt;
&lt;p&gt;One of the benefits of working for the public sector is that I can more freely publish code without worrying about &amp;lsquo;trade secrets&amp;rsquo; or what have you so I thought I would put my code out for anyone to see, maybe someone will find it useful.  It is split into two separate files, mostly because I used &lt;a href=&#34;http://webhelp.esri.com/arcgisdesktop/9.2/index.cfm?TopicName=An_overview_of_ModelBuilder&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Model Builder&lt;/a&gt; to generate the main processing chunk of code (Project_Reclassify.py) and another script to control looping, etc. The code isn&amp;rsquo;t pretty and you&amp;rsquo;ll see the results of my development process with two subroutines in LaunchScript.py that could really be one.&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;&lt;/h3&gt;
&lt;h3 id=&#34;launchscriptpy&#34;&gt;LaunchScript.py&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; Project_Reclassify

mConversion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3.28084&amp;#34;&lt;/span&gt;
mProjection &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;PROJCS[&amp;#39;NAD_1983_UTM_Zone_15N&amp;#39;,GEOGCS[&amp;#39;GCS_North_American_1983&amp;#39;,DATUM[&amp;#39;D_North_American_1983&amp;#39;,SPHEROID[&amp;#39;GRS_1980&amp;#39;,6378137.0,298.257222101]],PRIMEM[&amp;#39;Greenwich&amp;#39;,0.0],UNIT[&amp;#39;Degree&amp;#39;,0.0174532925199433]],PROJECTION[&amp;#39;Transverse_Mercator&amp;#39;],PARAMETER[&amp;#39;False_Easting&amp;#39;,500000.0],PARAMETER[&amp;#39;False_Northing&amp;#39;,0.0],PARAMETER[&amp;#39;Central_Meridian&amp;#39;,-93.0],PARAMETER[&amp;#39;Scale_Factor&amp;#39;,0.9996],PARAMETER[&amp;#39;Latitude_Of_Origin&amp;#39;,0.0],UNIT[&amp;#39;Meter&amp;#39;,1.0]]&amp;#34;&lt;/span&gt;
mCellSize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;#Project_Reclassify.Process(&amp;#34;C:\mgs\Projects\NED_10m\n44w092\grdn44w092_13&amp;#34;, mProjection, mConversion,&amp;#34;C:\mgs\Projects\NED_10m\n44w092\try30&amp;#34;,mCellSize)&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CallIt&lt;/span&gt; (inDir,inGrid,outGrid):
fullinFN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inDir&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;+inGrid&lt;/span&gt;
fulloutFN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:\mgs\Projects\NED_10m\Output&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;+outGrid&lt;/span&gt;
tmpGridFN &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;emp&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;outGrid
Project_Reclassify&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Process(fullinFN, mProjection, mConversion,fulloutFN,mCellSize,tmpGridFN)

&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CallIt2&lt;/span&gt; (inGrd,inoutGrd):
outDir &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;C:\mgs\Projects\NED_10m&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; + inGrd + &amp;#39;&lt;/span&gt;\&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; + inGrd&lt;/span&gt;

outGrd &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grd&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;inGrd&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_13&amp;#39;&lt;/span&gt;

CallIt(outDir,outGrd,inoutGrd)

&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n44w092&amp;#34;,&amp;#34;LaCrosse_W&amp;#34;)&lt;/span&gt;
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n44w093&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MasonCity_E&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n44w094&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;MasonCity_W&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n44w095&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fairmont_E&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n44w096&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fairmont_W&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n44w097&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SiouxFalls_E&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n45w092&amp;#34;,&amp;#34;EauClaire_W&amp;#34;)&lt;/span&gt;
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n45w093&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;StPaul_E&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n45w094&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;StPaul_W&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n45w095&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NewUlm_E&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n45w096&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NewUlm_W&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n45w097&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Watertown_E&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n46w093&amp;#34;,&amp;#34;Stillwater_E&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n46w094&amp;#34;,&amp;#34;Stillwater_W&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n46w095&amp;#34;,&amp;#34;StCloud_E&amp;#34;)&lt;/span&gt;
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n46w096&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;StCloud_W&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n46w097&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Milbank_E&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n47w092&amp;#34;,&amp;#34;Ashland_W&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n47w093&amp;#34;,&amp;#34;Duluth_E&amp;#34;)&lt;/span&gt;
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n47w094&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Duluth_W&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n47w095&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Brainerd_E&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n47w096&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Brainerd_W&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n47w097&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Fargo_E&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n48w090&amp;#34;,&amp;#34;Hancock_W&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n48w091&amp;#34;,&amp;#34;TwoHarbors_E&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n48w092&amp;#34;,&amp;#34;TwoHarbors_W&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n48w093&amp;#34;,&amp;#34;Hibbing_E&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n48w094&amp;#34;,&amp;#34;Hibbing_W&amp;#34;)&lt;/span&gt;
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n48w095&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bemidji_E&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n48w096&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Bemidji_W&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n48w097&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GrandForks_E&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n48w098&amp;#34;,&amp;#34;GrandForks_W&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n49w090&amp;#34;,&amp;#34;ThunderBay_W&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n49w091&amp;#34;,&amp;#34;Quetico_E&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n49w092&amp;#34;,&amp;#34;Quetico_W&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n49w093&amp;#34;,&amp;#34;InternationFalls_E&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n49w094&amp;#34;,&amp;#34;InternationFalls_W&amp;#34;)&lt;/span&gt;
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n49w095&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Roseau_E&amp;#34;&lt;/span&gt;)
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n49w096&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Roseau_W&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n49w097&amp;#34;,&amp;#34;ThiefRiverFalls_E&amp;#34;)&lt;/span&gt;
CallIt2(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;n49w098&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ThiefRiverFalls_W&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n50w095&amp;#34;,&amp;#34;Kenora_E&amp;#34;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#CallIt2(&amp;#34;n50w096&amp;#34;,&amp;#34;Kenora_W&amp;#34;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;projectreclassifypy&#34;&gt;Project.Reclassify.py&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Import system modules&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; sys&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; string&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; arcgisscripting

&lt;span style=&#34;color:#75715e&#34;&gt;# Create the Geoprocessor object&lt;/span&gt;
gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; arcgisscripting&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create()

&lt;span style=&#34;color:#75715e&#34;&gt;# Check out any necessary licenses&lt;/span&gt;
gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;CheckOutExtension(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spatial&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Load required toolboxes...&lt;/span&gt;
gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AddToolbox(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/Program Files/ArcGIS/ArcToolbox/Toolboxes/Spatial Analyst Tools.tbx&amp;#34;&lt;/span&gt;)
gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;AddToolbox(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;C:/Program Files/ArcGIS/ArcToolbox/Toolboxes/Data Management Tools.tbx&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#75715e&#34;&gt;# Script arguments...&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Process&lt;/span&gt;( inInputRaster, inOutputCoord, inConversionFactor, inOutputRaster, inCellSize, intempRasterFN):
Input_Raster &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inInputRaster &lt;span style=&#34;color:#75715e&#34;&gt;#sys.argv[1]&lt;/span&gt;
Output_Coordinate_System &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inOutputCoord &lt;span style=&#34;color:#75715e&#34;&gt;#sys.argv[3]&lt;/span&gt;
Input_raster_or_constant_value_2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inConversionFactor &lt;span style=&#34;color:#75715e&#34;&gt;#sys.argv[4]&lt;/span&gt;
Output_CellSize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inCellSize

&lt;span style=&#34;color:#75715e&#34;&gt;#if Input_raster_or_constant_value_2 == &amp;#39;#&amp;#39;:&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Input_raster_or_constant_value_2 = &amp;#34;3.28084&amp;#34; # provide a default value if unspecified&lt;/span&gt;

Output_raster &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inOutputRaster

&lt;span style=&#34;color:#75715e&#34;&gt;# Local variables...&lt;/span&gt;
Temp_Raster &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; intempRasterFN

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; Input_Raster
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; Temp_Raster
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; Output_Coordinate_System
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; inCellSize

&lt;span style=&#34;color:#75715e&#34;&gt;# Process: Project Raster...&lt;/span&gt;
gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ProjectRaster_management(Input_Raster, Temp_Raster, Output_Coordinate_System, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CUBIC&amp;#34;&lt;/span&gt;, Output_CellSize, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)

&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; Input_raster_or_constant_value_2
&lt;span style=&#34;color:#66d9ef&#34;&gt;print&lt;/span&gt; Output_raster

&lt;span style=&#34;color:#75715e&#34;&gt;# Process: Times...&lt;/span&gt;
gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Times_sa(Temp_Raster, Input_raster_or_constant_value_2, Output_raster)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Measuring distance from a point to a line segment in Python</title>
      <link>https://maprantala.com/2010/05/16/measuring-distance-from-a-point-to-a-line-segment-in-python/</link>
      <pubDate>Sun, 16 May 2010 17:14:23 -0500</pubDate>
      <guid>https://maprantala.com/2010/05/16/measuring-distance-from-a-point-to-a-line-segment-in-python/</guid>
      <description>&lt;p&gt;I recently had the need to calculate the distance from a point (address point) to a polyline (street segment) and wanted to avoid using any additional libraries because it was being done for an external client. Ok, I actually used arcgisscripting for reading the data but that lacked, from what I could tell, the fine-detail granularity of measuring distance between individual geometries.&lt;/p&gt;
&lt;p&gt;But since the only spatial operations I needed were to measure the distance between two points and the distance between a point and polyline, I decided to just do it via brute force. The datasets being processed were not huge so it made this feasible.&lt;/p&gt;
&lt;p&gt;Measuring point-to-point distance was easy enough. And while I knew I could work through the details of measuring the distance between a point and polyline, I decided NOT to re-invent the wheel if I did not have to. Google did not come up with any direct answers but I did come across this &lt;a href=&#34;http://local.wasp.uwa.edu.au/%7Epbourke/geometry/pointline/&#34; target=&#34;_blank&#34;&gt;post&lt;/a&gt; from &lt;a href=&#34;http://local.wasp.uwa.edu.au/%7Epbourke/&#34; target=&#34;_blank&#34;&gt;Paul Bourke&lt;/a&gt; at the  &lt;a href=&#34;http://wasp.uwa.edu.au/&#34; target=&#34;_blank&#34;&gt;University of Western Australia&lt;/a&gt; about measuring the distance between a point and a line segment. A polyline is just a series of line segments so I used it as the basis of my measurement–I just loop through all the consecutive vertice pairs, using the minimum distance found.&lt;/p&gt;
&lt;p&gt;Paul did not have a python implementation included, so I went ahead and created my own from his information.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;lineMagnitude&lt;/span&gt; (x1, y1, x2, y2):
    lineMagnitude &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sqrt(math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pow((x2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x1), &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; math&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pow((y2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y1), &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; lineMagnitude

&lt;span style=&#34;color:#75715e&#34;&gt;#Calc minimum distance from a point and a line segment (i.e. consecutive vertices in a polyline).&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;DistancePointLine&lt;/span&gt; (px, py, x1, y1, x2, y2):
    &lt;span style=&#34;color:#75715e&#34;&gt;#http://local.wasp.uwa.edu.au/~pbourke/geometry/pointline/source.vba&lt;/span&gt;
    LineMag &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lineMagnitude(x1, y1, x2, y2)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; LineMag &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00000001&lt;/span&gt;:
        DistancePointLine &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9999&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; DistancePointLine

    u1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (((px &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x1) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (x2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x1)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ((py &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y1) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (y2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y1)))
    u &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; u1 &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (LineMag &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; LineMag)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (u &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00001&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; (u &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;):
        &lt;span style=&#34;color:#75715e&#34;&gt;#// closest point does not fall within the line segment, take the shorter distance&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;#// to an endpoint&lt;/span&gt;
        ix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lineMagnitude(px, py, x1, y1)
        iy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lineMagnitude(px, py, x2, y2)
        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ix &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; iy:
            DistancePointLine &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; iy
        &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
            DistancePointLine &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ix
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
        &lt;span style=&#34;color:#75715e&#34;&gt;# Intersecting point is on the line, use the formula&lt;/span&gt;
        ix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; u &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (x2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x1)
        iy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; u &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (y2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; y1)
        DistancePointLine &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lineMagnitude(px, py, ix, iy)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; DistancePointLine
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
  </channel>
</rss>
